[{"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js":"1","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js":"2","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx":"3","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Search.jsx":"4","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\modal\\RatingModal.jsx":"5","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\shop\\Shop.jsx":"6","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js":"7","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx":"8","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx":"9","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx":"10","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js":"11","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"12","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx":"13","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx":"14","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js":"15","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx":"16","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx":"17","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js":"18","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx":"19","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx":"20","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Star.jsx":"21","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"22","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx":"23","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx":"24","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\category\\CategoryList.jsx":"25","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx":"26","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx":"27","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx":"28","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx":"29","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx":"30","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx":"31","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx":"32","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx":"33","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx":"34","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx":"35","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\sub\\SubHome.jsx":"36","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\category\\CategoryHome.jsx":"37","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx":"38","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx":"39","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\searchReducer.js":"40","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js":"41","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\sub\\SubList.jsx":"42","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js":"43","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\cartReducer.js":"44","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx":"45","D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js":"46","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\cart\\Cart.jsx":"47","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx":"48","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\rating.js":"49","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx":"50","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx":"51","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx":"52","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.jsx":"53","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx":"54","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx":"55","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"56","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\drawerReducer.js":"57","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\drawer\\SideDrawer.jsx":"58","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx":"59","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\checkout\\Checkout.jsx":"60","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\cart.js":"61","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js":"62","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.jsx":"63","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\coupon.js":"64","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx":"65","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\payment\\Payment.jsx":"66","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\couponReducer.js":"67","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\stripe\\StripeCheckout.jsx":"68","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\stripe.js":"69","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.jsx":"70","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Invoice.jsx":"71","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\admin.js":"72","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Orders.jsx":"73","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\CODreducer.js":"74"},{"size":632,"mtime":1608307299018,"results":"75","hashOfConfig":"76"},{"size":839,"mtime":1608893583030,"results":"77","hashOfConfig":"76"},{"size":439,"mtime":1608655082516,"results":"78","hashOfConfig":"76"},{"size":1219,"mtime":1619607971818,"results":"79","hashOfConfig":"76"},{"size":1457,"mtime":1615531181648,"results":"80","hashOfConfig":"76"},{"size":13222,"mtime":1620364745156,"results":"81","hashOfConfig":"76"},{"size":2736,"mtime":1621338595417,"results":"82","hashOfConfig":"76"},{"size":1919,"mtime":1619671584882,"results":"83","hashOfConfig":"76"},{"size":1897,"mtime":1619671703508,"results":"84","hashOfConfig":"76"},{"size":3381,"mtime":1621231093066,"results":"85","hashOfConfig":"76"},{"size":913,"mtime":1620041788651,"results":"86","hashOfConfig":"76"},{"size":840,"mtime":1608307686218,"results":"87","hashOfConfig":"76"},{"size":3033,"mtime":1620366626003,"results":"88","hashOfConfig":"76"},{"size":5826,"mtime":1620377376786,"results":"89","hashOfConfig":"76"},{"size":585,"mtime":1607766768348,"results":"90","hashOfConfig":"76"},{"size":3929,"mtime":1610527940237,"results":"91","hashOfConfig":"76"},{"size":574,"mtime":1613725496622,"results":"92","hashOfConfig":"76"},{"size":362,"mtime":1607675520702,"results":"93","hashOfConfig":"76"},{"size":3112,"mtime":1608202342939,"results":"94","hashOfConfig":"76"},{"size":2221,"mtime":1615452776312,"results":"95","hashOfConfig":"76"},{"size":571,"mtime":1619773365167,"results":"96","hashOfConfig":"76"},{"size":439,"mtime":1608307051688,"results":"97","hashOfConfig":"76"},{"size":3634,"mtime":1609391038300,"results":"98","hashOfConfig":"76"},{"size":813,"mtime":1608617776926,"results":"99","hashOfConfig":"76"},{"size":1054,"mtime":1615548037908,"results":"100","hashOfConfig":"76"},{"size":1635,"mtime":1608115717563,"results":"101","hashOfConfig":"76"},{"size":2108,"mtime":1608115685113,"results":"102","hashOfConfig":"76"},{"size":3334,"mtime":1621416356724,"results":"103","hashOfConfig":"76"},{"size":2044,"mtime":1621338827353,"results":"104","hashOfConfig":"76"},{"size":4103,"mtime":1608655074555,"results":"105","hashOfConfig":"76"},{"size":2151,"mtime":1608291889245,"results":"106","hashOfConfig":"76"},{"size":2668,"mtime":1615545881185,"results":"107","hashOfConfig":"76"},{"size":1392,"mtime":1621321875523,"results":"108","hashOfConfig":"76"},{"size":1979,"mtime":1608617915948,"results":"109","hashOfConfig":"76"},{"size":2959,"mtime":1608893728711,"results":"110","hashOfConfig":"76"},{"size":1833,"mtime":1619597802332,"results":"111","hashOfConfig":"76"},{"size":1889,"mtime":1619597544963,"results":"112","hashOfConfig":"76"},{"size":1219,"mtime":1619597346304,"results":"113","hashOfConfig":"76"},{"size":4971,"mtime":1612610273401,"results":"114","hashOfConfig":"76"},{"size":241,"mtime":1619602993964,"results":"115","hashOfConfig":"76"},{"size":1002,"mtime":1609215469180,"results":"116","hashOfConfig":"76"},{"size":998,"mtime":1619597465993,"results":"117","hashOfConfig":"76"},{"size":497,"mtime":1621409838368,"results":"118","hashOfConfig":"76"},{"size":250,"mtime":1620019860374,"results":"119","hashOfConfig":"76"},{"size":4800,"mtime":1621337745568,"results":"120","hashOfConfig":"76"},{"size":5182,"mtime":1621418657185,"results":"121","hashOfConfig":"76"},{"size":4282,"mtime":1621410592826,"results":"122","hashOfConfig":"76"},{"size":689,"mtime":1608288356338,"results":"123","hashOfConfig":"76"},{"size":749,"mtime":1615541791124,"results":"124","hashOfConfig":"76"},{"size":277,"mtime":1613714957963,"results":"125","hashOfConfig":"76"},{"size":3941,"mtime":1612610461647,"results":"126","hashOfConfig":"76"},{"size":3368,"mtime":1612604875707,"results":"127","hashOfConfig":"76"},{"size":4464,"mtime":1620040341201,"results":"128","hashOfConfig":"76"},{"size":4916,"mtime":1608810943211,"results":"129","hashOfConfig":"76"},{"size":1294,"mtime":1608529582038,"results":"130","hashOfConfig":"76"},{"size":697,"mtime":1608287144973,"results":"131","hashOfConfig":"76"},{"size":215,"mtime":1620041716081,"results":"132","hashOfConfig":"76"},{"size":1953,"mtime":1620102633813,"results":"133","hashOfConfig":"76"},{"size":1547,"mtime":1613711202275,"results":"134","hashOfConfig":"76"},{"size":6926,"mtime":1621416029551,"results":"135","hashOfConfig":"76"},{"size":1601,"mtime":1621415705602,"results":"136","hashOfConfig":"76"},{"size":275,"mtime":1608032442773,"results":"137","hashOfConfig":"76"},{"size":6178,"mtime":1620385650919,"results":"138","hashOfConfig":"76"},{"size":516,"mtime":1620626303060,"results":"139","hashOfConfig":"76"},{"size":2536,"mtime":1609934809548,"results":"140","hashOfConfig":"76"},{"size":684,"mtime":1620640283207,"results":"141","hashOfConfig":"76"},{"size":219,"mtime":1620629752032,"results":"142","hashOfConfig":"76"},{"size":5855,"mtime":1621228556516,"results":"143","hashOfConfig":"76"},{"size":257,"mtime":1620803441504,"results":"144","hashOfConfig":"76"},{"size":981,"mtime":1621321181279,"results":"145","hashOfConfig":"76"},{"size":2812,"mtime":1621254118315,"results":"146","hashOfConfig":"76"},{"size":433,"mtime":1621317732470,"results":"147","hashOfConfig":"76"},{"size":2683,"mtime":1621416301694,"results":"148","hashOfConfig":"76"},{"size":208,"mtime":1621409808171,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"7twgo8",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"177"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"177"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"189"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"167"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"189"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"199"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"177"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"177"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"266"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"266"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"199"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"273"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"189"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"220"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js",[],["342","343"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js",[],["344","345"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx",[],["346","347"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Search.jsx",[],["348","349"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\modal\\RatingModal.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\shop\\Shop.jsx",["350","351","352","353"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Menu, Radio, Slider } from 'antd'\r\nimport { DollarOutlined, DownSquareOutlined, StarOutlined } from '@ant-design/icons'\r\n\r\nimport { getProductsCount, fetchProductsByFilter } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport { getCategories } from '../../functions/category'\r\nimport { getSubs } from '../../functions/sub'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox'\r\nimport Star from '../../components/forms/Star'\r\n\r\nconst { Item, SubMenu } = Menu\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [price, setPrice] = useState()\r\n    const [ok, setOk] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n    const [selectedCategories, setSelectedCategories] = useState([])\r\n    const [star, setStar] = useState('')\r\n    const [subs, setSubs] = useState([])\r\n    const [sub, setSub] = useState('')\r\n    const [brands, setBrands] = useState(['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'])\r\n    const [brand, setBrand] = useState('')\r\n    const [colors, setColors] = useState(['Black', 'Brown', 'Silver', 'White', 'Blue'])\r\n    const [color, setColor] = useState('')\r\n    const [shipping, setShipping] = useState('')\r\n\r\n    const { text } = useSelector(state => state.search)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // 1. load products by default on page load\r\n    useEffect(() => {\r\n        loadProducts()\r\n\r\n        getCategories().then(res => setCategories(res.data))\r\n\r\n        getSubs().then(res => setSubs(res.data))\r\n    }, [])\r\n\r\n    const loadProducts = () => {\r\n        setLoading(true)\r\n        getProductsCount(12)\r\n            .then(res => setProducts(res.data))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    // 2. load products on search input\r\n    useEffect(() => {\r\n        if (text.trim()) {\r\n            const delayed = setTimeout(() => {\r\n                fetchProducts({ query: text })\r\n            }, 800)\r\n\r\n            return () => clearTimeout(delayed)\r\n        }\r\n    }, [text])\r\n\r\n    const fetchProducts = (arg) => {\r\n        fetchProductsByFilter(arg)\r\n            .then(res => setProducts(res.data))\r\n    }\r\n\r\n    // 3. load products on price change\r\n    const handleSlider = (value) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setPrice(value)\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 800)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts({ price })\r\n    }, [ok])\r\n\r\n    // 4. load products based on choosing categories\r\n    const handleCheck = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        const arr = [...selectedCategories]\r\n        const elem = e.target.value\r\n        const elemIndex = arr.indexOf(elem)\r\n\r\n        if (elemIndex === -1) {\r\n            arr.push(elem)\r\n        } else {\r\n            arr.splice(elemIndex, 1)\r\n        }\r\n\r\n        setSelectedCategories(arr)\r\n        fetchProducts({ category: arr })\r\n    }\r\n\r\n    // 5. load products by rating\r\n    const handleStarClick = (num) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setStar(num)\r\n        fetchProducts({ stars: num })\r\n    }\r\n\r\n    const showStars = () => (\r\n        <>\r\n            <Star starsNumber={5} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={4} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={3} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={2} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={1} onStarClick={handleStarClick} activeStar={star} />\r\n        </>\r\n    )\r\n\r\n    // 6. load products by subs\r\n    const showSubs = () => subs.map(s => (\r\n        <div\r\n            key={s._id}\r\n            className={`p-1 m-1 badge badge-${sub === s ? 'info' : 'secondary'}`}\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => handleSub(s)}\r\n        >\r\n            {s.name}\r\n        </div>\r\n    ))\r\n\r\n    const handleSub = (sub) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setSub(sub)\r\n        fetchProducts({ sub })\r\n    }\r\n\r\n    // 7. load products by brand\r\n    const showBrands = () => brands.map(b => (\r\n        <>\r\n            <Radio\r\n                key={b}\r\n                name={b}\r\n                value={b}\r\n                onChange={handleBrand}\r\n                checked={b === brand}\r\n            >\r\n                {b}\r\n            </Radio>\r\n            <br />\r\n        </>\r\n    ))\r\n\r\n    const handleBrand = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setBrand(e.target.value)\r\n        fetchProducts({ brand: e.target.value })\r\n    }\r\n\r\n    // 8. load products by color\r\n    const showColors = () => colors.map(c => (\r\n        <>\r\n            <Radio\r\n                key={c}\r\n                name={c}\r\n                value={c}\r\n                onChange={handleColor}\r\n                checked={c === color}\r\n            >\r\n                {c}\r\n            </Radio>\r\n            <br />\r\n        </>\r\n    ))\r\n\r\n    const handleColor = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setShipping('')\r\n\r\n        setColor(e.target.value)\r\n        fetchProducts({ color: e.target.value })\r\n    }\r\n\r\n    // 9. load products by shipping\r\n    const showShipping = () => (\r\n        <>\r\n            <Checkbox\r\n                value='Yes'\r\n                onChange={handleShipping}\r\n                className=\"my-1\"\r\n                checked={shipping === 'Yes'}\r\n            >\r\n                Yes\r\n            </Checkbox>\r\n            <br />\r\n            <Checkbox\r\n                value='No'\r\n                onChange={handleShipping}\r\n                className=\"my-1\"\r\n                checked={shipping === 'No'}\r\n            >\r\n                No\r\n            </Checkbox>\r\n        </>\r\n    )\r\n\r\n    const handleShipping = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n\r\n        setShipping(e.target.value)\r\n        fetchProducts({ shipping: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-md-3\">\r\n                    <h4>Search/Filter</h4>\r\n                    <hr />\r\n\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\r\n                    >\r\n                        <SubMenu\r\n                            key=\"1\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DollarOutlined /> Price\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div>\r\n                                <Slider\r\n                                    range\r\n                                    max=\"100000\"\r\n                                    className=\"mx-4\"\r\n                                    tipFormatter={v => `$${v}`}\r\n                                    value={price}\r\n                                    onChange={handleSlider}\r\n                                />\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"2\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Category\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {categories.map(c => (\r\n                                <div key={c._id}>\r\n                                    <Checkbox\r\n                                        className=\"pb-2 px-4\"\r\n                                        value={c._id}\r\n                                        name=\"category\"\r\n                                        onChange={handleCheck}\r\n                                        checked={selectedCategories.includes(c._id)}\r\n                                    >\r\n                                        {c.name}\r\n                                    </Checkbox>\r\n                                </div>\r\n                            ))}\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"3\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <StarOutlined /> Rating\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showStars()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"4\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Sub Categories\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showSubs()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"5\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Brands\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showBrands()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"6\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Colors\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showColors()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"7\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Shipping\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showShipping()}</div>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <h4 className=\"text-danger\">{loading ? 'Loading...' : 'Products'}</h4>\r\n                    <div className=\"row\">\r\n                        {products.length ? products.map(product => (\r\n                            <div\r\n                                className=\"col-md-4\"\r\n                                key={product.id}\r\n                            >\r\n                                <ProductCard\r\n                                    product={product}\r\n                                />\r\n                            </div>\r\n                        )) : (\r\n                            <div>Products no found</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n",["354","355"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx",["356"],"import React, { useEffect, useState } from 'react'\r\nimport { Pagination } from 'antd'\r\n\r\nimport LoadingCard from '../../components/cards/LoadingCard';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nimport { getHomeProducts, getProductsTotal } from '../../functions/product'\r\n\r\nconst NewArrivals = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [totalProducts, setTotalProducts] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsTotal().then(res => setTotalProducts(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getHomeProducts('createdAt', 'desc', page)\r\n            .then(res => {\r\n                setProducts(res.data)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? <LoadingCard count={3} /> : (\r\n                <>\r\n                    <div className=\"row mb-3\">\r\n                        {products.map(product => (\r\n                            <div\r\n                                key={product._id}\r\n                                className=\"col-md-4\"\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            current={page}\r\n                            total={totalProducts / 3 * 10}\r\n                            onChange={value => setPage(value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewArrivals\r\n",["357","358"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx",["359"],"import React, { useEffect, useState } from 'react'\r\nimport { Pagination } from 'antd'\r\n\r\nimport LoadingCard from '../../components/cards/LoadingCard';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nimport { getHomeProducts, getProductsTotal } from '../../functions/product'\r\n\r\nconst BestSellers = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [totalProducts, setTotalProducts] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsTotal().then(res => setTotalProducts(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getHomeProducts('sold', 'desc', page)\r\n            .then(res => setProducts(res.data))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pb-5\">\r\n            {loading ? <LoadingCard count={3} /> : (\r\n                <>\r\n                    <div className=\"row mb-3\">\r\n                        {products.map(product => (\r\n                            <div\r\n                                key={product._id}\r\n                                className=\"col-md-4\"\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            current={page}\r\n                            total={totalProducts / 3 * 10}\r\n                            onChange={value => setPage(value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BestSellers\r\n",["360","361"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx",["362","363"],"import React, { useState } from 'react'\r\nimport { Card, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\nimport showAverage from '../../functions/rating'\r\n\r\nconst { Meta } = Card\r\n\r\nconst Styled = styled.div`\r\n    .ant-card-bordered .ant-card-cover {\r\n        height: 150px;\r\n    }\r\n\r\n    .ant-card-cover img {\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .ant-card-body {\r\n        height: 116px;\r\n    }\r\n`\r\n\r\nconst ProductCard = ({ product }) => {\r\n    const { title, description, images, slug, price, quantity } = product\r\n\r\n    const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== undefined) {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            // set only unique objects\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n            localStorage.setItem('cart', JSON.stringify(unique))\r\n\r\n            // show tooltip\r\n            setTooltip('Added to cart')\r\n\r\n            // save to redux store\r\n            dispatch({\r\n                type: 'ADD_TO_CART',\r\n                payload: unique\r\n            })\r\n\r\n            dispatch({\r\n                type: 'SET_DRAWER',\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styled>\r\n            <div className=\"text-center mb-2\">\r\n                {product && product.ratings && product.ratings.length ? showAverage(product) : 'No ratings yet'}\r\n            </div>\r\n            <Card\r\n                style={{ objectFit: \"cover\" }}\r\n                cover={<img src={images.length ? images[0].url : imgPlaceholder} />}\r\n                className=\"p-1\"\r\n                actions={[\r\n                    <Link to={`/product/${slug}/`}>\r\n                        <EyeOutlined className=\"text-primary\" />\r\n                        <br /> View Product\r\n                    </Link>,\r\n                    <Tooltip title={tooltip}>\r\n                        <a\r\n                            onClick={handleAddToCart}\r\n                            disabled={quantity < 1}\r\n                        >\r\n                            <ShoppingCartOutlined\r\n                                className=\"text-danger\"\r\n                            />\r\n                            <br /> {quantity < 1 ? 'Out of stock' : 'Add to Cart'}\r\n                        </a>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <Meta\r\n                    title={\r\n                        <>\r\n                            <div>{title}</div>\r\n                            <div className=\"text-danger\">$ {price}</div>\r\n                        </>\r\n                    }\r\n                    description={`${description && description.substring(0, 40)}${(description.length > 40) ? '...' : ''}`}\r\n                />\r\n            </Card>\r\n        </Styled>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js",[],["364","365"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],["366","367"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx",[],["368","369"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx",["370"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('dastan.maratov95@gmail.com')\r\n    const [password, setPassword] = useState('123456')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        const intended = history.location.state\r\n        if (intended) {\r\n            return\r\n        } else {\r\n            user && user.token && history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const roleBasedRedirect = (data) => {\r\n        // intended page\r\n        const intended = history.location.state\r\n        if (intended) {\r\n            history.push(intended.from)\r\n        } else {\r\n            if (data.role === 'admin') {\r\n                history.push('/admin/dashboard')\r\n            } else {\r\n                history.push('/user/history')\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const googleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithPopup(googleAuthProvider)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Your email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n                autoFocus\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Your password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n        </div>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<MailOutlined />}\r\n            className=\"mb-3\"\r\n            disabled={!email || password.length < 6}\r\n            onClick={handleSubmit}\r\n            block\r\n        >\r\n            Login with Email/Password\r\n        </Button>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<GoogleOutlined />}\r\n            className=\"mb-3\"\r\n            onClick={googleLogin}\r\n            block\r\n            danger\r\n        >\r\n            Login with Google\r\n        </Button>\r\n        <Link\r\n            className=\"float-right text-danger\"\r\n            to=\"/forgot/password\"\r\n        >\r\n            Forgot Password?\r\n        </Link>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4>Login</h4>\r\n                    )}\r\n                    {loginForm()}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js",[],["371","372"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx",["373","374","375","376","377"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductCreateForm = ({ handleChange, handleSubmit, values, handleCategoryChange, showSubs, subOptions, setValues }) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        subs,\r\n        quantity,\r\n        images,\r\n        shipping,\r\n        colors,\r\n        color,\r\n        brands,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input className=\"form-control\" type=\"text\" value={title} name=\"title\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input className=\"form-control\" type=\"text\" value={description} name=\"description\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input className=\"form-control\" type=\"number\" value={price} name=\"price\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select name=\"shipping\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input className=\"form-control\" type=\"number\" value={quantity} name=\"quantity\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    {colors.map(c => (\r\n                        <option key={c} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Brand</label>\r\n                <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    {brands.map(b => (\r\n                        <option key={b} value={b}>{b}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select name=\"category\" className=\"form-control\" onChange={handleCategoryChange}>\r\n                    <option value=\"\">Please select</option>\r\n                    {categories.length > 0 &&\r\n                        categories.map(c => (\r\n                            <option key={c._id} value={c._id}>{c.name}</option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            {showSubs && (\r\n                <div className=\"form-group\">\r\n                    <label>Sub Categories</label>\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: '100%' }}\r\n                        value={subs}\r\n                        placeholder=\"Please select\"\r\n                        onChange={value => setValues({ ...values, subs: value })}\r\n                    >\r\n                        {subOptions.length && subOptions.map(s => (\r\n                            <Option key={s._id} value={s._id}>{s.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )}\r\n\r\n            <button type=\"submit\" className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductCreateForm\r\n",["378","379"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx",[],["380","381"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Star.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],["382","383"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx",["384"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct } from '../../../functions/product'\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductCreate = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [values, setValues] = useState(initialState)\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [showSubs, setShowSubs] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(categories => setValues({ ...values, categories: categories.data }))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const response = await createProduct(user.token, values)\r\n            window.alert(`\"${response.data.title}\" successfully created`)\r\n            window.location.reload()\r\n            setLoading(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error(err.response.data.err)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.value) {\r\n            setValues({ ...values, subs: [], category: e.target.value })\r\n            getCategorySubs(e.target.value)\r\n                .then(res => {\r\n                    setSubOptions(res.data)\r\n                    setShowSubs(true)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product create</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductCreateForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        showSubs={showSubs}\r\n                        subOptions={subOptions}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCreate",["385","386"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx",[],["387","388"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\category\\CategoryList.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx",["389"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`)\r\n        localStorage.setItem('emailForRegistration', email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n        >\r\n            Register\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx",["390"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n\r\n        await auth\r\n            .sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success(`Link for password reset is sent to your email ${email}`)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const forgotPasswordForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n            disabled={!email}\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Forgot password</h4>\r\n                    }\r\n                    {forgotPasswordForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx",["391"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\n\r\nimport UserNav from '../../components/nav/UserNav'\r\nimport { getOrders } from '../../functions/cart'\r\nimport ShowPaymentInfo from '../../components/cards/ShowPaymentInfo'\r\nimport Invoice from '../../components/cards/Invoice'\r\n\r\nconst History = () => {\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        fetchOrders()\r\n    }, [])\r\n\r\n    const fetchOrders = () => {\r\n        getOrders(user.token)\r\n            .then(res => setOrders(res.data))\r\n    }\r\n\r\n    const showEachOrders = () =>\r\n        orders.reverse().map((order, i) => (\r\n            <div\r\n                key={i}\r\n                className=\"m-5 p-3 card\"\r\n            >\r\n                <ShowPaymentInfo order={order} />\r\n                {showOrderInTable(order)}\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <PDFDownloadLink\r\n                            document={<Invoice order={order} />}\r\n                            className=\"btn btn-block btn-outline-primary text-primary\"\r\n                            fileName=\"invoice.pdf\"\r\n                        >\r\n                            Download PDF\r\n                        </PDFDownloadLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n    const showOrderInTable = (order) =>\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {order && order.products.map((p, i) => (\r\n                    <tr key={i}>\r\n                        <td><b>{p.product.title}</b></td>\r\n                        <td>{p.product.price}</td>\r\n                        <td>{p.product.brand}</td>\r\n                        <td>{p.product.color}</td>\r\n                        <td>{p.count}</td>\r\n                        <td>\r\n                            {p.product.shipping === \"Yes\"\r\n                                ? <CheckCircleOutlined style={{ color: 'green' }} />\r\n                                : <CloseCircleOutlined style={{ color: 'red' }} />\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav />\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h4 className=\"mt-2\">{orders.length ? 'User purchase orders' : 'No purchase orders'}</h4>\r\n                    {showEachOrders()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx",["392"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx",["393","394"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getProduct, productRelated, productStar } from '../../functions/product'\r\nimport SingleProduct from '../../components/cards/SingleProduct'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst Product = ({ match }) => {\r\n    const [product, setProduct] = useState('')\r\n    const [star, setStar] = useState(0)\r\n    const [related, setRelated] = useState([])\r\n\r\n    console.log(related);\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n    const { slug } = match.params\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n    }, [slug])\r\n\r\n    useEffect(() => {\r\n        if (user && user.token && product.ratings) {\r\n            let existingRatingObject = product && product.ratings.find(elem => elem.postedBy.toString() === user._id.toString())\r\n            existingRatingObject && setStar(existingRatingObject.star) // current user's star\r\n        }\r\n    })\r\n\r\n    const loadProduct = () => {\r\n        getProduct(match.params.slug)\r\n            .then(res => {\r\n                setProduct(res.data)\r\n                productRelated(res.data._id)\r\n                    .then(res => setRelated(res.data))\r\n            })\r\n    }\r\n\r\n    const onStarClick = (newRating, name) => {\r\n        setStar(newRating)\r\n        if (user && user.token) {\r\n            productStar(name, newRating, user.token)\r\n                .then(res => {\r\n                    loadProduct()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row pt-4\">\r\n                <SingleProduct\r\n                    product={product}\r\n                    star={star}\r\n                    onStarClick={onStarClick}\r\n                />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center py-5\">\r\n                    <hr />\r\n                    <h4>Related products</h4>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {related.length ? related.map(product => (\r\n                            <div\r\n                                className=\"col-md-4\"\r\n                                key={product._id}\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        )) : (\r\n                            <div className=\"text-center col\">No Products Found</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx",["395"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Orders from '../../components/cards/Orders'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\nimport { changeOrderStatus, getOrders } from '../../functions/admin'\r\n\r\nconst AdminDashboard = () => {\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        fetchOrders()\r\n    }, [])\r\n\r\n    const fetchOrders = () => {\r\n        getOrders(user.token).then(res => setOrders(res.data))\r\n    }\r\n\r\n    const handleStatusChange = (orderStatus, orderId) => {\r\n        changeOrderStatus(orderId, orderStatus, user.token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    toast.success('Status successfully changed')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h4 className=\"mt-1\">Admin Dashboard</h4>\r\n                    <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx",["396"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategory()\r\n    }, [])\r\n\r\n    const loadCategory = async () => {\r\n        getCategory(match.params.slug).then(res => setCategoryName(res.data.name))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateCategory(user.token, categoryName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/category')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update category</h4>\r\n                    }\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={categoryName}\r\n                        setCategoryName={setCategoryName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx",["397"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategories } from '../../../functions/category'\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\n\r\nconst SubUpdate = ({ history, match }) => {\r\n    const [subName, setSubName] = useState('')\r\n    const [parent, setParent] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadSub()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadSub = async () => {\r\n        getSub(match.params.slug).then(res => {\r\n            setSubName(res.data.name)\r\n            setParent(res.data.parent)\r\n        })\r\n    }\r\n\r\n    const loadCategories = async () => {\r\n        getCategories().then(res => setCategories(res.data))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateSub(user.token, parent, subName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/sub')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update sub category</h4>\r\n                    }\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={e => setParent(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 && categories.map(c => (\r\n                                <option key={c._id} value={c._id} selected={c._id === parent}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={subName}\r\n                        setCategoryName={setSubName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\sub\\SubHome.jsx",["398"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport { getSub } from '../../functions/sub'\r\n\r\nconst SubHome = ({ match }) => {\r\n    const [sub, setSub] = useState({})\r\n    const [products, setProducts] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { slug } = match.params\r\n\r\n    console.log(sub, 'sub');\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        getSub(slug)\r\n            .then(res => {\r\n                setSub(res.data.sub)\r\n                setProducts(res.data.products)\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {isLoading ? <div className=\"text-center mt-5\">Loading...</div> : (\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4 className=\"jumbotron text-center p-3 my-5 display-4\">\r\n                                {products.length} Products in\r\n                                <strong><span> \"{sub.name}\" </span></strong>\r\n                                sub category\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {products && products.map(product => (\r\n                            <div className=\"col-md-4\">\r\n                                <ProductCard\r\n                                    key={product.id}\r\n                                    product={product}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubHome\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\category\\CategoryHome.jsx",["399"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { getCategory } from '../../functions/category'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst CategoryHome = ({ match }) => {\r\n    const [category, setCategory] = useState({})\r\n    const [products, setProducts] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { slug } = match.params\r\n\r\n    console.log(category, 'category');\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        getCategory(slug)\r\n            .then(res => {\r\n                setCategory(res.data.category)\r\n                setProducts(res.data.products)\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {isLoading ? <div className=\"text-center mt-5\">Loading...</div> : (\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4 className=\"jumbotron text-center p-3 my-5 display-4\">\r\n                                {products.length} Products in\r\n                                <strong><span> \"{category.name}\" </span></strong>\r\n                                category\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {products && products.map(product => (\r\n                            <div className=\"col-md-4\">\r\n                                <ProductCard\r\n                                    key={product.id}\r\n                                    product={product}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryHome\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx",[],["400","401"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx",["402","403"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct, getProduct, updateProduct } from '../../../functions/product'\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n    const [values, setValues] = useState(initialState)\r\n    const [categories, setCategories] = useState([])\r\n    const [subsIds, setSubsIds] = useState([])\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadProduct = () => {\r\n        getProduct(match.params.slug)\r\n            .then(resp => {\r\n                // 1. load single product\r\n                setValues({ ...values, ...resp.data })\r\n                // 2. load single product category subs\r\n                getCategorySubs(resp.data.category._id)\r\n                    .then(res => setSubOptions(res.data))\r\n                // 3. prepare array of sub ids to show as default sub\r\n                const arr = []\r\n                resp.data.subs.map(sub => arr.push(sub._id))\r\n                setSubsIds((prev) => arr)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loadCategories = () => {\r\n        getCategories()\r\n            .then(categories => setCategories(categories.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        values.subs = subsIds\r\n        values.category = selectedCategory ? selectedCategory : values.category\r\n\r\n        updateProduct(match.params.slug, values, user.token)\r\n            .then(response => {\r\n                debugger\r\n                setLoading(false)\r\n                toast.success(`\"${response.data.title}\" is updated`)\r\n                history.push('/admin/products')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(err.response.data.err)\r\n            })\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        setSelectedCategory(e.target.value)\r\n        getCategorySubs(e.target.value)\r\n            .then(resp => setSubOptions(resp.data))\r\n\r\n        // clear subcategories array of ids\r\n        setSubsIds([])\r\n        // if user clicks back to the original category\r\n        // show its sub categories in default\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product update</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductUpdateForm\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        categories={categories}\r\n                        subsIds={subsIds}\r\n                        setSubsIds={setSubsIds}\r\n                        subOptions={subOptions}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\searchReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js",[],["404","405"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\sub\\SubList.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\cartReducer.js",[],["406","407"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx",["408","409","410"],"import React, { useState } from 'react'\r\nimport { Card, Tabs, Tooltip } from 'antd'\r\nimport { HeartOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport StarRatings from 'react-star-ratings';\r\nimport _ from 'lodash'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\nimport ProductListItems from './ProductListItems'\r\nimport RatingModal from '../modal/RatingModal'\r\nimport showAverage from '../../functions/rating'\r\nimport { addProductToWishlist } from '../../functions/product'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n    const { title, images, description, _id } = product\r\n\r\n    const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { user } = useSelector(state => state)\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== undefined) {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            // set only unique objects\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n            localStorage.setItem('cart', JSON.stringify(unique))\r\n\r\n            // show tooltip\r\n            setTooltip('Added to cart')\r\n\r\n            // save to redux store\r\n            dispatch({\r\n                type: 'ADD_TO_CART',\r\n                payload: unique\r\n            })\r\n\r\n            dispatch({\r\n                type: 'SET_DRAWER',\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleAddProductToWishlist = () => {\r\n        addProductToWishlist(_id, user.token)\r\n            .then(res => {\r\n                if (res.data.ok) {\r\n                    history.push('/user/wishlist')\r\n                    toast.success('Added to wishlist')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-7\">\r\n                {images && images.length ? (\r\n                    <Carousel\r\n                        showArrows={true}\r\n                        autoPlay\r\n                        infiniteLoop\r\n                    >\r\n                        {images && images.map(i => (\r\n                            <div key={i.public_id}>\r\n                                <img src={i.url} alt=\"product\" />\r\n                            </div>\r\n                        ))}\r\n                    </Carousel>\r\n                ) : (\r\n                    <img src={imgPlaceholder} className=\"card-image mb-3\" />\r\n                )}\r\n                <Tabs type=\"card\">\r\n                    <TabPane tab=\"Description\" key=\"1\">{description && description}</TabPane>\r\n                    <TabPane tab=\"More\" key=\"2\">Call us on XXXXXX to get info about this product</TabPane>\r\n                </Tabs>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <h1 className=\"bg-info p-3\">{title}</h1>\r\n                <div className=\"mb-3 text-center\">\r\n                    {product && product.ratings && product.ratings.length ? showAverage(product) : 'No ratings yet'}\r\n                </div>\r\n                <Card\r\n                    actions={[\r\n                        <Tooltip title={tooltip}>\r\n                            <a onClick={handleAddToCart}>\r\n                                <ShoppingCartOutlined\r\n                                    className=\"text-danger\"\r\n                                />\r\n                                <br /> Add to Cart\r\n                                </a>\r\n                        </Tooltip>,\r\n                        <a onClick={handleAddProductToWishlist}>\r\n                            <HeartOutlined className=\"text-info\" /><br /> Add to Wishlist\r\n                        </a>,\r\n                        <RatingModal>\r\n                            <StarRatings\r\n                                rating={star}\r\n                                starRatedColor=\"red\"\r\n                                changeRating={onStarClick}\r\n                                numberOfStars={5}\r\n                                name={_id}\r\n                                isSelectable={true}\r\n                            />\r\n                        </RatingModal>\r\n                    ]}\r\n                >\r\n                    <ProductListItems product={product} />\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleProduct\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js",["411"],"import { LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { auth } from './firebase';\nimport { currentUser } from './functions/auth';\n// using lazy\nconst Header = lazy(() => import('./components/nav/Header'))\nconst Login = lazy(() => import('./pages/auth/Login'))\nconst Register = lazy(() => import('./pages/auth/Register'))\nconst RegisterComplete = lazy(() => import('./pages/auth/RegisterComplete'))\nconst ForgotPassword = lazy(() => import('./pages/auth/ForgotPassword'))\nconst Home = lazy(() => import('./pages/home/Home'))\nconst History = lazy(() => import('./pages/user/History'))\nconst Password = lazy(() => import('./pages/user/Password'))\nconst Wishlist = lazy(() => import('./pages/user/Wishlist'))\nconst AdminDashboard = lazy(() => import('./pages/admin/AdminDashboard'))\nconst UserRoute = lazy(() => import('./components/routes/UserRoute'))\nconst AdminRoute = lazy(() => import('./components/routes/AdminRoute'))\nconst CategoryCreate = lazy(() => import('./pages/admin/category/CategoryCreate'))\nconst CategoryUpdate = lazy(() => import('./pages/admin/category/CategoryUpdate'))\nconst SubCreate = lazy(() => import('./pages/admin/sub/SubCreate'))\nconst SubUpdate = lazy(() => import('./pages/admin/sub/SubUpdate'))\nconst ProductCreate = lazy(() => import('./pages/admin/product/ProductCreate'))\nconst AllProducts = lazy(() => import('./pages/admin/product/AllProducts'))\nconst ProductUpdate = lazy(() => import('./pages/admin/product/ProductUpdate'))\nconst Product = lazy(() => import('./pages/home/Product'))\nconst CategoryHome = lazy(() => import('./pages/category/CategoryHome'))\nconst SubHome = lazy(() => import('./pages/sub/SubHome'))\nconst Shop = lazy(() => import('./pages/shop/Shop'))\nconst Cart = lazy(() => import('./pages/cart/Cart'))\nconst SideDrawer = lazy(() => import('./components/drawer/SideDrawer'))\nconst Checkout = lazy(() => import('./pages/checkout/Checkout'))\nconst CreateCoupon = lazy(() => import('./pages/admin/coupon/CreateCoupon'))\nconst Payment = lazy(() => import('./pages/payment/Payment'))\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult()\n        currentUser(idTokenResult.token)\n          .then(res => {\n            const { data } = res\n            dispatch({\n              type: 'LOGGED_IN_USER',\n              payload: {\n                name: data.name,\n                email: data.email,\n                role: data.role,\n                _id: data._id,\n                token: idTokenResult.token\n              }\n            })\n          })\n          .catch(err => console.log(err))\n      }\n    })\n\n    updateCart()\n\n    // cleanup\n    return () => unsubscribe()\n  }, [])\n\n  const updateCart = () => {\n    const storageData = localStorage.getItem('cart')\n    if (storageData) {\n      dispatch({ type: 'ADD_TO_CART', payload: JSON.parse(storageData) })\n    }\n  }\n\n  return (\n    <Suspense fallback={\n      <div className=\"col p-5 text-center\">__ React Redux EC<LoadingOutlined />mmerce __</div>\n    }>\n      <Header />\n      <SideDrawer />\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n        <Route exact path=\"/product/:slug\" component={Product} />\n        <Route exact path=\"/category/:slug\" component={CategoryHome} />\n        <Route exact path=\"/sub/:slug\" component={SubHome} />\n        <Route exact path=\"/shop\" component={Shop} />\n        <Route exact path=\"/cart\" component={Cart} />\n\n        <UserRoute exact path=\"/user/history\" component={History} />\n        <UserRoute exact path=\"/user/password\" component={Password} />\n        <UserRoute exact path=\"/user/wishlist\" component={Wishlist} />\n        <UserRoute exact path=\"/checkout\" component={Checkout} />\n        <UserRoute exact path=\"/payment\" component={Payment} />\n\n        <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashboard} />\n        <AdminRoute exact path=\"/admin/category\" component={CategoryCreate} />\n        <AdminRoute exact path=\"/admin/category/:slug\" component={CategoryUpdate} />\n        <AdminRoute exact path=\"/admin/sub\" component={SubCreate} />\n        <AdminRoute exact path=\"/admin/sub/:slug\" component={SubUpdate} />\n        <AdminRoute exact path=\"/admin/product\" component={ProductCreate} />\n        <AdminRoute exact path=\"/admin/product/:slug\" component={ProductUpdate} />\n        <AdminRoute exact path=\"/admin/products\" component={AllProducts} />\n        <AdminRoute exact path=\"/admin/coupon\" component={CreateCoupon} />\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default App;\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\cart\\Cart.jsx",["412"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ProductCardInCheckout from '../../components/cards/ProductCardInCheckout'\r\nimport { saveUserCart } from '../../functions/cart'\r\n\r\nconst Cart = ({ history }) => {\r\n    const { cart, user, COD } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const getTotalSum = () => {\r\n        return cart.reduce((acc, current) => {\r\n            return acc + (current.price * current.count)\r\n        }, 0)\r\n    }\r\n\r\n    const saveOrderToDb = (cash = false) => {\r\n        console.log('CASH', cash);\r\n        dispatch({\r\n            type: 'COD',\r\n            payload: false\r\n        })\r\n\r\n        if (cash) {\r\n            dispatch({\r\n                type: 'COD',\r\n                payload: true\r\n            })\r\n        }\r\n\r\n        saveUserCart(cart, user.token)\r\n            .then(res => {\r\n                if (res.data.ok) {\r\n                    history.push('/checkout')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const showProducts = () => (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                    <th scope=\"col\">Remove</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {cart.map(product => (\r\n                    <ProductCardInCheckout\r\n                        key={product._id}\r\n                        product={product}\r\n                    />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h4>Cart / {cart.length} Product</h4>\r\n                    {!cart.length ? (\r\n                        <p>No products in cart. <Link to=\"/shop\">Continue shopping.</Link></p>\r\n                    ) : (\r\n                        showProducts()\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h4>Order Summary</h4>\r\n                    <hr />\r\n                    <p>Products</p>\r\n                    {cart.map(c => (\r\n                        <p key={c._id}>{c.title} x {c.count} = ${c.price * c.count}</p>\r\n                    ))}\r\n                    <hr />\r\n                    <p>Total: ${getTotalSum()}</p>\r\n                    <hr />\r\n                    {user.token ? (\r\n                        <>\r\n                            <button\r\n                                className=\"btn btn-sm btn-primary mt-2\"\r\n                                disabled={!cart.length}\r\n                                onClick={() => saveOrderToDb()}\r\n                            >\r\n                                Proceed to Checkout\r\n                            </button>\r\n                            <br />\r\n                            <button\r\n                                className=\"btn btn-sm btn-warning mt-2\"\r\n                                disabled={!cart.length}\r\n                                onClick={() => saveOrderToDb(true)}\r\n                            >\r\n                                Pay Cash On Delivery\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <button className=\"btn btn-sm btn-primary mt-2\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/login',\r\n                                    state: { from: '/cart' }\r\n                                }}\r\n                            >\r\n                                Login to Checkout\r\n                            </Link>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\rating.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx",["413","414"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx",["415"],"import React from 'react'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { Avatar, Badge } from 'antd';\r\n\r\nimport { removeImage, uploadImages } from '../../functions/product';\r\n\r\nconst FileUpload = ({ values, setValues, setLoading }) => {\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    const imageUploadAndResize = (e) => {\r\n        const files = e.target.files\r\n        const uploadedFiles = values.images\r\n\r\n        if (files.length) {\r\n            setLoading(true)\r\n            for (let i = 0; i < files.length; i++) {\r\n                Resizer.imageFileResizer(\r\n                    files[i],\r\n                    720,\r\n                    720,\r\n                    'JPEG',\r\n                    100,\r\n                    0,\r\n                    uri => {\r\n                        uploadImages(user ? user.token : \"\", uri)\r\n                            .then(res => {\r\n                                console.log(\"UPLOAD SUCCESS\", res);\r\n                                setLoading(false)\r\n                                uploadedFiles.push(res.data)\r\n                                setValues({ ...values, images: uploadedFiles })\r\n                            })\r\n                            .catch(err => {\r\n                                setLoading(false)\r\n                                console.log('CLOUDINARY UPLOAD ERR', err);\r\n                            })\r\n                    },\r\n                    'base64'\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleImageRemove = (public_id) => {\r\n        setLoading(true)\r\n        removeImage(user ? user.token : \"\", public_id)\r\n            .then(res => {\r\n                setLoading(false)\r\n                const { images } = values\r\n                const filteredImages = images.filter(image => image.public_id !== public_id)\r\n                setValues({ ...values, images: filteredImages })\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                {values.images &&\r\n                    values.images.map(image => (\r\n                        <Badge\r\n                            count=\"X\"\r\n                            key={image.public_id}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => handleImageRemove(image.public_id)}\r\n                        >\r\n                            <Avatar\r\n                                size={100}\r\n                                src={image.url}\r\n                                className=\"ml-3\"\r\n                                shape=\"square\"\r\n                            />\r\n                        </Badge>\r\n                    ))}\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <label className=\"btn btn-primary btn-raised\">\r\n                    Choose file\r\n                <input\r\n                        type=\"file\"\r\n                        accept=\"images/*\"\r\n                        onChange={imageUploadAndResize}\r\n                        multiple\r\n                        hidden\r\n                    />\r\n                </label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.jsx",["416","417"],"import React from 'react'\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport ModalImage from \"react-modal-image\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify'\r\n\r\nimport placeholderImg from '../../images/placeholder.png'\r\n\r\nconst ProductCardInCheckout = ({ product }) => {\r\n    const colors = ['Black', 'Brown', 'Silver', 'White', 'Blue']\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleColorChange = e => {\r\n        let cart = []\r\n\r\n        if (typeof window !== 'undefined') {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.map(item => {\r\n                if (item._id === product._id) {\r\n                    item.color = e.target.value\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n            dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n        }\r\n    }\r\n\r\n    const handleQuantityChange = e => {\r\n        let cart = []\r\n\r\n        if (e.target.value < 1) return\r\n\r\n        if (e.target.value > product.quantity) {\r\n            toast.error(`Max available quantity: ${product.quantity}`)\r\n            return\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.map(item => {\r\n                if (item._id === product._id) {\r\n                    item.count = e.target.value\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n            dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n        }\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== 'undefined') {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart = cart.filter(item => item._id !== product._id)\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n            dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ width: '100px', height: 'auto' }}>\r\n                    {product.images.length ? (\r\n                        <ModalImage\r\n                            small={product.images[0].url}\r\n                            large={product.images[0].url}\r\n                        />\r\n                    ) : (\r\n                        <ModalImage\r\n                            small={placeholderImg}\r\n                            large={placeholderImg}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </td>\r\n            <td>{product.title}</td>\r\n            <td>${product.price}</td>\r\n            <td>{product.brand}</td>\r\n            <td>\r\n                <div>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"color\"\r\n                        onChange={handleColorChange}\r\n                    >\r\n                        {product.color ? <option value={product.color}>{product.color}</option> : <option>Select color</option>}\r\n                        {colors\r\n                            .filter(c => c !== product.color)\r\n                            .map(c => <option key={c} value={c}>{c}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={product.count}\r\n                    onChange={handleQuantityChange}\r\n                />\r\n            </td>\r\n            <td className=\"text-center\">\r\n                {product.shipping === \"Yes\"\r\n                    ? <CheckCircleOutlined className=\"text-success\" />\r\n                    : <CloseCircleOutlined className=\"text-danger\" />\r\n                }\r\n            </td>\r\n            <td>\r\n                <CloseOutlined\r\n                    className=\"text-danger pointer\"\r\n                    onClick={handleRemove}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ProductCardInCheckout\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["418"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(5)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount(currentCount => --currentCount)\r\n        }, 1000)\r\n\r\n        // redirect once count is equal to 0\r\n        count === 0 && history.push('/')\r\n\r\n        return () => clearInterval(interval)\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"container p-5 text-center\">\r\n            <p>Redirecting you in {count} seconds</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\drawerReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\drawer\\SideDrawer.jsx",["419"],"import React from 'react'\r\nimport { Drawer } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport placeholder from '../../images/placeholder.png'\r\n\r\nconst SideDrawer = () => {\r\n    const { drawer, cart } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = () => {\r\n        dispatch({\r\n            type: 'SET_DRAWER',\r\n            payload: false\r\n        })\r\n    }\r\n\r\n    const imageStyle = {\r\n        width: '100%',\r\n        height: '100px',\r\n        objectFit: 'cover'\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={`Cart / ${cart.length} Product`}\r\n            visible={drawer}\r\n            onClose={handleClose}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {cart.map(p => (\r\n                        <React.Fragment key={p._id}>\r\n                            <img\r\n                                src={p.images[0]\r\n                                    ? p.images[0].url\r\n                                    : placeholder\r\n                                }\r\n                                style={imageStyle}\r\n                            />\r\n                            <p className=\"text-center bg-secondary text-light\">{p.title} x {p.count}</p>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <Link to=\"/cart\">\r\n                <button\r\n                    className=\"text-center btn btn-primary btn-raised btn-block\"\r\n                    onClick={() =>\r\n                        dispatch({\r\n                            type: 'SET_DRAWER',\r\n                            payload: false\r\n                        })\r\n                    }\r\n                >\r\n                    Go To Cart\r\n                </button>\r\n            </Link>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx",["420"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\checkout\\Checkout.jsx",["421"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\cart.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\coupon.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\payment\\Payment.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\couponReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\stripe\\StripeCheckout.jsx",["422","423","424"],"import React, { useEffect, useState } from 'react'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nimport { DollarOutlined, CheckOutlined } from '@ant-design/icons'\r\n\r\nimport { createPaymentIntent } from '../../functions/stripe'\r\nimport placeholder from '../../images/placeholder.png'\r\nimport { createOrder, emptyUserCart } from '../../functions/cart'\r\n\r\nconst StripeCheckout = ({ history }) => {\r\n    const [processing, setProcessing] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [succeeded, setSucceeded] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [clientSecret, setClientSecret] = useState(\"\")\r\n\r\n    const [cartTotal, setCartTotal] = useState(0)\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0)\r\n    const [payable, setPayable] = useState(0)\r\n\r\n    const { user, coupon } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    useEffect(() => {\r\n        createPaymentIntent(user.token, coupon)\r\n            .then(res => {\r\n                setClientSecret(res.data.clientSecret)\r\n                // additional response received on successful payment\r\n                setCartTotal(res.data.cartTotal)\r\n                setTotalAfterDiscount(res.data.totalAfterDiscount)\r\n                setPayable(res.data.payable)\r\n            })\r\n    }, [])\r\n\r\n    const cartStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\"\r\n                }\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setProcessing(true)\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        })\r\n\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`)\r\n            setProcessing(false)\r\n        } else {\r\n            createOrder(user.token, payload)\r\n                .then(res => {\r\n                    debugger\r\n                    if (res.data.ok) {\r\n                        // empty cart from local storage\r\n                        localStorage.removeItem('cart')\r\n                        // empty cart from redux\r\n                        dispatch({\r\n                            type: \"ADD_TO_CART\",\r\n                            payload: []\r\n                        })\r\n                        // empty coupon\r\n                        dispatch({\r\n                            type: \"COUPON_APPLIED\",\r\n                            payload: false\r\n                        })\r\n                        // empty cart from database\r\n                        emptyUserCart(user.token)\r\n                    }\r\n                })\r\n\r\n            setError(null)\r\n            setProcessing(false)\r\n            setSucceeded(true)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setDisabled(e.empty)\r\n        setError(e.error ? e.error.message : \"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {coupon && totalAfterDiscount ? (\r\n                <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\r\n            ) : (\r\n                <p className=\"alert alert-danger\">No coupon applied</p>\r\n            )}\r\n\r\n            <div className=\"text-center\">\r\n                <Card\r\n                    cover={\r\n                        <img\r\n                            src={placeholder}\r\n                            style={{\r\n                                height: \"200px\",\r\n                                objectFit: \"cover\",\r\n                                marginBottom: \"-50px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    actions={[\r\n                        <>\r\n                            <DollarOutlined className=\"text-info\" />\r\n                            Total: ${cartTotal}\r\n                        </>,\r\n                        <>\r\n                            <CheckOutlined className=\"text-info\" />\r\n                            Total payable: ${totalAfterDiscount || cartTotal}\r\n                        </>\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <form\r\n                id=\"payment-form\"\r\n                className=\"stripe-form\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <CardElement\r\n                    id=\"card-element\"\r\n                    options={cartStyle}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    className=\"stripe-button\"\r\n                    disabled={processing || disabled || succeeded}\r\n                >\r\n                    <span id=\"button-text\">\r\n                        {processing ? <div className=\"spinner\" id=\"spinner\" /> : \"Pay\"}\r\n                    </span>\r\n                </button>\r\n\r\n                {error && <div className=\"card-error mt-2\" role=\"alert\">{error}</div>}\r\n\r\n                <p className={succeeded ? \"result-message pt-3\" : \"result-message hidden\"}>\r\n                    Payment Successful. {\" \"}\r\n                    <Link to=\"/user/history\">See it in your purchase history.</Link>\r\n                </p>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StripeCheckout\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\stripe.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Invoice.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\admin.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Orders.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\CODreducer.js",[],{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","replacedBy":"428"},{"ruleId":"425","replacedBy":"429"},{"ruleId":"427","replacedBy":"430"},{"ruleId":"425","replacedBy":"431"},{"ruleId":"427","replacedBy":"432"},{"ruleId":"425","replacedBy":"433"},{"ruleId":"427","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":13,"column":9,"nodeType":"437","messageId":"438","endLine":13,"endColumn":13},{"ruleId":"435","severity":1,"message":"439","line":25,"column":20,"nodeType":"437","messageId":"438","endLine":25,"endColumn":29},{"ruleId":"435","severity":1,"message":"440","line":27,"column":20,"nodeType":"437","messageId":"438","endLine":27,"endColumn":29},{"ruleId":"441","severity":1,"message":"442","line":89,"column":8,"nodeType":"443","endLine":89,"endColumn":12,"suggestions":"444"},{"ruleId":"425","replacedBy":"445"},{"ruleId":"427","replacedBy":"446"},{"ruleId":"441","severity":1,"message":"447","line":16,"column":8,"nodeType":"443","endLine":16,"endColumn":14,"suggestions":"448"},{"ruleId":"425","replacedBy":"449"},{"ruleId":"427","replacedBy":"450"},{"ruleId":"441","severity":1,"message":"447","line":16,"column":8,"nodeType":"443","endLine":16,"endColumn":14,"suggestions":"451"},{"ruleId":"425","replacedBy":"452"},{"ruleId":"427","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":77,"column":24,"nodeType":"456","endLine":77,"endColumn":84},{"ruleId":"457","severity":1,"message":"458","line":85,"column":25,"nodeType":"456","endLine":88,"endColumn":26},{"ruleId":"425","replacedBy":"459"},{"ruleId":"427","replacedBy":"460"},{"ruleId":"425","replacedBy":"461"},{"ruleId":"427","replacedBy":"462"},{"ruleId":"425","replacedBy":"463"},{"ruleId":"427","replacedBy":"464"},{"ruleId":"441","severity":1,"message":"465","line":27,"column":8,"nodeType":"443","endLine":27,"endColumn":14,"suggestions":"466"},{"ruleId":"425","replacedBy":"467"},{"ruleId":"427","replacedBy":"468"},{"ruleId":"435","severity":1,"message":"469","line":12,"column":9,"nodeType":"437","messageId":"438","endLine":12,"endColumn":17},{"ruleId":"435","severity":1,"message":"470","line":15,"column":9,"nodeType":"437","messageId":"438","endLine":15,"endColumn":15},{"ruleId":"435","severity":1,"message":"471","line":16,"column":9,"nodeType":"437","messageId":"438","endLine":16,"endColumn":17},{"ruleId":"435","severity":1,"message":"472","line":18,"column":9,"nodeType":"437","messageId":"438","endLine":18,"endColumn":14},{"ruleId":"435","severity":1,"message":"473","line":20,"column":9,"nodeType":"437","messageId":"438","endLine":20,"endColumn":14},{"ruleId":"425","replacedBy":"474"},{"ruleId":"427","replacedBy":"475"},{"ruleId":"425","replacedBy":"476"},{"ruleId":"427","replacedBy":"477"},{"ruleId":"425","replacedBy":"478"},{"ruleId":"427","replacedBy":"479"},{"ruleId":"441","severity":1,"message":"480","line":38,"column":8,"nodeType":"443","endLine":38,"endColumn":10,"suggestions":"481"},{"ruleId":"425","replacedBy":"482"},{"ruleId":"427","replacedBy":"483"},{"ruleId":"425","replacedBy":"484"},{"ruleId":"427","replacedBy":"485"},{"ruleId":"441","severity":1,"message":"465","line":13,"column":8,"nodeType":"443","endLine":13,"endColumn":14,"suggestions":"486"},{"ruleId":"441","severity":1,"message":"465","line":15,"column":8,"nodeType":"443","endLine":15,"endColumn":14,"suggestions":"487"},{"ruleId":"441","severity":1,"message":"488","line":18,"column":8,"nodeType":"443","endLine":18,"endColumn":10,"suggestions":"489"},{"ruleId":"441","severity":1,"message":"490","line":17,"column":8,"nodeType":"443","endLine":17,"endColumn":10,"suggestions":"491"},{"ruleId":"441","severity":1,"message":"492","line":20,"column":8,"nodeType":"443","endLine":20,"endColumn":14,"suggestions":"493"},{"ruleId":"441","severity":1,"message":"494","line":22,"column":5,"nodeType":"437","endLine":22,"endColumn":14,"suggestions":"495"},{"ruleId":"441","severity":1,"message":"488","line":16,"column":8,"nodeType":"443","endLine":16,"endColumn":10,"suggestions":"496"},{"ruleId":"441","severity":1,"message":"497","line":17,"column":8,"nodeType":"443","endLine":17,"endColumn":10,"suggestions":"498"},{"ruleId":"441","severity":1,"message":"499","line":21,"column":8,"nodeType":"443","endLine":21,"endColumn":10,"suggestions":"500"},{"ruleId":"441","severity":1,"message":"501","line":23,"column":8,"nodeType":"443","endLine":23,"endColumn":10,"suggestions":"502"},{"ruleId":"441","severity":1,"message":"501","line":23,"column":8,"nodeType":"443","endLine":23,"endColumn":10,"suggestions":"503"},{"ruleId":"425","replacedBy":"504"},{"ruleId":"427","replacedBy":"505"},{"ruleId":"435","severity":1,"message":"506","line":7,"column":10,"nodeType":"437","messageId":"438","endLine":7,"endColumn":23},{"ruleId":"441","severity":1,"message":"492","line":41,"column":8,"nodeType":"443","endLine":41,"endColumn":10,"suggestions":"507"},{"ruleId":"425","replacedBy":"508"},{"ruleId":"427","replacedBy":"509"},{"ruleId":"425","replacedBy":"510"},{"ruleId":"427","replacedBy":"511"},{"ruleId":"454","severity":1,"message":"455","line":89,"column":21,"nodeType":"456","endLine":89,"endColumn":77},{"ruleId":"457","severity":1,"message":"458","line":104,"column":29,"nodeType":"456","endLine":104,"endColumn":58},{"ruleId":"457","severity":1,"message":"458","line":111,"column":25,"nodeType":"456","endLine":111,"endColumn":65},{"ruleId":"441","severity":1,"message":"512","line":69,"column":6,"nodeType":"443","endLine":69,"endColumn":8,"suggestions":"513"},{"ruleId":"435","severity":1,"message":"514","line":9,"column":25,"nodeType":"437","messageId":"438","endLine":9,"endColumn":28},{"ruleId":"435","severity":1,"message":"515","line":23,"column":9,"nodeType":"437","messageId":"438","endLine":23,"endColumn":13},{"ruleId":"435","severity":1,"message":"470","line":25,"column":9,"nodeType":"437","messageId":"438","endLine":25,"endColumn":15},{"ruleId":"435","severity":1,"message":"516","line":3,"column":8,"nodeType":"437","messageId":"438","endLine":3,"endColumn":13},{"ruleId":"517","severity":1,"message":"518","line":22,"column":27,"nodeType":"519","messageId":"520","endLine":22,"endColumn":29},{"ruleId":"517","severity":1,"message":"518","line":48,"column":27,"nodeType":"519","messageId":"520","endLine":48,"endColumn":29},{"ruleId":"441","severity":1,"message":"465","line":17,"column":8,"nodeType":"443","endLine":17,"endColumn":15,"suggestions":"521"},{"ruleId":"454","severity":1,"message":"455","line":35,"column":29,"nodeType":"456","endLine":41,"endColumn":31},{"ruleId":"454","severity":1,"message":"455","line":33,"column":24,"nodeType":"456","endLine":33,"endColumn":84},{"ruleId":"441","severity":1,"message":"522","line":29,"column":8,"nodeType":"443","endLine":29,"endColumn":10,"suggestions":"523"},{"ruleId":"435","severity":1,"message":"524","line":21,"column":12,"nodeType":"437","messageId":"438","endLine":21,"endColumn":19},{"ruleId":"441","severity":1,"message":"525","line":38,"column":8,"nodeType":"443","endLine":38,"endColumn":10,"suggestions":"526"},{"ruleId":"454","severity":1,"message":"455","line":115,"column":25,"nodeType":"456","endLine":122,"endColumn":27},"no-native-reassign",["527"],"no-negated-in-lhs",["528"],["527"],["528"],["527"],["528"],["527"],["528"],"no-unused-vars","'Item' is assigned a value but never used.","Identifier","unusedVar","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.","ArrayExpression",["529"],["527"],["528"],"React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["530"],["527"],["528"],["531"],["527"],["528"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["527"],["528"],["527"],["528"],["527"],["528"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["532"],["527"],["528"],"'category' is assigned a value but never used.","'images' is assigned a value but never used.","'shipping' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.",["527"],["528"],["527"],["528"],["527"],["528"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["533"],["527"],["528"],["527"],["528"],["534"],["535"],"React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["536"],"React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["537"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["538"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user, product] as a second argument to the useEffect Hook.",["539"],["540"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["541"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["542"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["543"],["544"],["527"],["528"],"'createProduct' is defined but never used.",["545"],["527"],["528"],["527"],["528"],"React Hook useEffect has missing dependencies: 'dispatch' and 'updateCart'. Either include them or remove the dependency array.",["546"],"'COD' is assigned a value but never used.","'subs' is assigned a value but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["547"],"React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["548"],"'payable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["549"],"no-global-assign","no-unsafe-negation",{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"552","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"555","fix":"559"},{"desc":"555","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"561","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"574","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},"Update the dependencies array to be: [ok, price]",{"range":"587","text":"588"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"589","text":"590"},{"range":"591","text":"590"},"Update the dependencies array to be: [history, user]",{"range":"592","text":"593"},"Update the dependencies array to be: [loadCategories]",{"range":"594","text":"595"},{"range":"596","text":"593"},{"range":"597","text":"593"},"Update the dependencies array to be: [fetchOrders]",{"range":"598","text":"599"},"Update the dependencies array to be: [loadWishlist]",{"range":"600","text":"601"},"Update the dependencies array to be: [loadProduct, slug]",{"range":"602","text":"603"},"Add dependencies array: [user, product]",{"range":"604","text":"605"},{"range":"606","text":"599"},"Update the dependencies array to be: [loadCategory]",{"range":"607","text":"608"},"Update the dependencies array to be: [loadSub]",{"range":"609","text":"610"},"Update the dependencies array to be: [slug]",{"range":"611","text":"612"},{"range":"613","text":"612"},"Update the dependencies array to be: [loadProduct]",{"range":"614","text":"615"},"Update the dependencies array to be: [dispatch, updateCart]",{"range":"616","text":"617"},"Update the dependencies array to be: [count, history]",{"range":"618","text":"619"},"Update the dependencies array to be: [user.token]",{"range":"620","text":"621"},"Update the dependencies array to be: [coupon, user.token]",{"range":"622","text":"623"},[2873,2877],"[ok, price]",[583,589],"[loadAllProducts, page]",[583,589],[925,931],"[history, user]",[1241,1243],"[loadCategories]",[394,400],[453,459],[636,638],"[fetchOrders]",[550,552],"[loadWishlist]",[661,667],"[loadProduct, slug]",[990,990],", [user, product]",[500,502],[614,616],"[loadCategory]",[766,768],"[loadSub]",[673,675],"[slug]",[723,725],[1424,1426],"[loadProduct]",[3036,3038],"[dispatch, updateCart]",[501,508],"[count, history]",[1135,1137],"[user.token]",[1572,1574],"[coupon, user.token]"]