[{"D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js":"1","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js":"2","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\Home.jsx":"3","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx":"4","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js":"5","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx":"6","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx":"7","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js":"8","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx":"9","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js":"10","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js":"11","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx":"12","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js":"13","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx":"14","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx":"17","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx":"18","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx":"19","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx":"20","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"21","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx":"22","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx":"23","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js":"24","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx":"25","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx":"26","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx":"27","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx":"28","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js":"29","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx":"30","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js":"31","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx":"32","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx":"33","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx":"34","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx":"35","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx":"36","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx":"37","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx":"38"},{"size":3361,"mtime":1610022852751,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1607675520702,"results":"41","hashOfConfig":"40"},{"size":123,"mtime":1607678793664,"results":"42","hashOfConfig":"40"},{"size":5517,"mtime":1608884324346,"results":"43","hashOfConfig":"40"},{"size":913,"mtime":1607944000892,"results":"44","hashOfConfig":"40"},{"size":1635,"mtime":1608115717563,"results":"45","hashOfConfig":"40"},{"size":2329,"mtime":1608527153013,"results":"46","hashOfConfig":"40"},{"size":585,"mtime":1607766768348,"results":"47","hashOfConfig":"40"},{"size":3112,"mtime":1608202342939,"results":"48","hashOfConfig":"40"},{"size":147,"mtime":1607944523789,"results":"49","hashOfConfig":"40"},{"size":275,"mtime":1608032442773,"results":"50","hashOfConfig":"40"},{"size":2108,"mtime":1608115685113,"results":"51","hashOfConfig":"40"},{"size":632,"mtime":1608307299018,"results":"52","hashOfConfig":"40"},{"size":435,"mtime":1608288414170,"results":"53","hashOfConfig":"40"},{"size":439,"mtime":1608307051688,"results":"54","hashOfConfig":"40"},{"size":697,"mtime":1608287144973,"results":"55","hashOfConfig":"40"},{"size":2151,"mtime":1608291889245,"results":"56","hashOfConfig":"40"},{"size":438,"mtime":1608289883168,"results":"57","hashOfConfig":"40"},{"size":689,"mtime":1608288356338,"results":"58","hashOfConfig":"40"},{"size":499,"mtime":1609395392636,"results":"59","hashOfConfig":"40"},{"size":840,"mtime":1608307686218,"results":"60","hashOfConfig":"40"},{"size":1294,"mtime":1608529582038,"results":"61","hashOfConfig":"40"},{"size":4103,"mtime":1608655074555,"results":"62","hashOfConfig":"40"},{"size":1002,"mtime":1609215469180,"results":"63","hashOfConfig":"40"},{"size":1979,"mtime":1608617915948,"results":"64","hashOfConfig":"40"},{"size":439,"mtime":1608655082516,"results":"65","hashOfConfig":"40"},{"size":813,"mtime":1608617776926,"results":"66","hashOfConfig":"40"},{"size":4916,"mtime":1608810943211,"results":"67","hashOfConfig":"40"},{"size":839,"mtime":1608893583030,"results":"68","hashOfConfig":"40"},{"size":2959,"mtime":1608893728711,"results":"69","hashOfConfig":"40"},{"size":1034,"mtime":1610023074116,"results":"70","hashOfConfig":"40"},{"size":3634,"mtime":1609391038300,"results":"71","hashOfConfig":"40"},{"size":3929,"mtime":1610527940237,"results":"72","hashOfConfig":"40"},{"size":3357,"mtime":1609390915097,"results":"73","hashOfConfig":"40"},{"size":1186,"mtime":1609934876126,"results":"74","hashOfConfig":"40"},{"size":2536,"mtime":1609934809548,"results":"75","hashOfConfig":"40"},{"size":2788,"mtime":1610538543976,"results":"76","hashOfConfig":"40"},{"size":3807,"mtime":1610538678981,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"7twgo8",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js",["170"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Header from './components/nav/Header';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport RegisterComplete from './pages/auth/RegisterComplete';\nimport ForgotPassword from './pages/auth/ForgotPassword';\nimport Home from './pages/Home';\nimport { auth } from './firebase';\nimport { currentUser } from './functions/auth';\nimport History from './pages/user/History';\nimport Password from './pages/user/Password';\nimport Wishlist from './pages/user/Wishlist';\nimport AdminDashboard from './pages/admin/AdminDashboard';\nimport UserRoute from './components/routes/UserRoute';\nimport AdminRoute from './components/routes/AdminRoute';\nimport CategoryCreate from './pages/admin/category/CategoryCreate';\nimport CategoryUpdate from './pages/admin/category/CategoryUpdate';\nimport SubCreate from './pages/admin/sub/SubCreate';\nimport SubUpdate from './pages/admin/sub/SubUpdate';\nimport ProductCreate from './pages/admin/product/ProductCreate';\nimport AllProducts from './pages/admin/product/AllProducts';\nimport ProductUpdate from './pages/admin/product/ProductUpdate';\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult()\n        currentUser(idTokenResult.token)\n          .then(res => {\n            const { data } = res\n            dispatch({\n              type: 'LOGGED_IN_USER',\n              payload: {\n                name: data.name,\n                email: data.email,\n                role: data.role,\n                _id: data._id,\n                token: idTokenResult.token\n              }\n            })\n          })\n          .catch(err => console.log(err))\n      }\n    })\n\n    // cleanup\n    return () => unsubscribe()\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n        <UserRoute exact path=\"/user/history\" component={History} />\n        <UserRoute exact path=\"/user/password\" component={Password} />\n        <UserRoute exact path=\"/user/wishlist\" component={Wishlist} />\n        <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashboard} />\n        <AdminRoute exact path=\"/admin/category\" component={CategoryCreate} />\n        <AdminRoute exact path=\"/admin/category/:slug\" component={CategoryUpdate} />\n        <AdminRoute exact path=\"/admin/sub\" component={SubCreate} />\n        <AdminRoute exact path=\"/admin/sub/:slug\" component={SubUpdate} />\n        <AdminRoute exact path=\"/admin/product\" component={ProductCreate} />\n        <AdminRoute exact path=\"/admin/product/:slug\" component={ProductUpdate} />\n        <AdminRoute exact path=\"/admin/products\" component={AllProducts} />\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n",["171","172"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js",[],["173","174"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\Home.jsx",[],["175","176"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx",["177"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('dastan.maratov95@gmail.com')\r\n    const [password, setPassword] = useState('123456')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const roleBasedRedirect = (data) => {\r\n        if (data.role === 'admin') {\r\n            history.push('/admin/dashboard')\r\n        } else {\r\n            history.push('/user/history')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const googleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithPopup(googleAuthProvider)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Your email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n                autoFocus\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Your password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n        </div>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<MailOutlined />}\r\n            className=\"mb-3\"\r\n            disabled={!email || password.length < 6}\r\n            onClick={handleSubmit}\r\n            block\r\n        >\r\n            Login with Email/Password\r\n        </Button>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<GoogleOutlined />}\r\n            className=\"mb-3\"\r\n            onClick={googleLogin}\r\n            block\r\n            danger\r\n        >\r\n            Login with Google\r\n        </Button>\r\n        <Link\r\n            className=\"float-right text-danger\"\r\n            to=\"/forgot/password\"\r\n        >\r\n            Forgot Password?\r\n        </Link>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                            <h4>Login</h4>\r\n                        )}\r\n                    {loginForm()}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx",["178"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`)\r\n        localStorage.setItem('emailForRegistration', email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n        >\r\n            Register\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx",[],["179","180"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js",[],["181","182"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx",["183"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n\r\n        await auth\r\n            .sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success(`Link for password reset is sent to your email ${email}`)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const forgotPasswordForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n            disabled={!email}\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Forgot password</h4>\r\n                    }\r\n                    {forgotPasswordForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],["184","185"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["186"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(5)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount(currentCount => --currentCount)\r\n        }, 1000)\r\n\r\n        // redirect once count is equal to 0\r\n        count === 0 && history.push('/')\r\n\r\n        return () => clearInterval(interval)\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"container p-5 text-center\">\r\n            <p>Redirecting you in {count} seconds</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx",[],["187","188"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx",["189"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategory()\r\n    }, [])\r\n\r\n    const loadCategory = async () => {\r\n        getCategory(match.params.slug).then(res => setCategoryName(res.data.name))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateCategory(user.token, categoryName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/category')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update category</h4>\r\n                    }\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={categoryName}\r\n                        setCategoryName={setCategoryName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx",["190"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategories } from '../../../functions/category'\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\n\r\nconst SubUpdate = ({ history, match }) => {\r\n    const [subName, setSubName] = useState('')\r\n    const [parent, setParent] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadSub()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadSub = async () => {\r\n        getSub(match.params.slug).then(res => {\r\n            setSubName(res.data.name)\r\n            setParent(res.data.parent)\r\n        })\r\n    }\r\n\r\n    const loadCategories = async () => {\r\n        getCategories().then(res => setCategories(res.data))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateSub(user.token, parent, subName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/sub')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update sub category</h4>\r\n                    }\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={e => setParent(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 && categories.map(c => (\r\n                                <option key={c._id} value={c._id} selected={c._id === parent}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={subName}\r\n                        setCategoryName={setSubName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx",["191"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx",["192","193","194","195","196"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx",["197"],"import React from 'react'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { Avatar, Badge } from 'antd';\r\n\r\nimport { removeImage, uploadImages } from '../../functions/product';\r\n\r\nconst FileUpload = ({ values, setValues, setLoading }) => {\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    const imageUploadAndResize = (e) => {\r\n        const files = e.target.files\r\n        const uploadedFiles = values.images\r\n\r\n        if (files.length) {\r\n            setLoading(true)\r\n            for (let i = 0; i < files.length; i++) {\r\n                Resizer.imageFileResizer(\r\n                    files[i],\r\n                    720,\r\n                    720,\r\n                    'JPEG',\r\n                    100,\r\n                    0,\r\n                    uri => {\r\n                        uploadImages(user ? user.token : \"\", uri)\r\n                            .then(res => {\r\n                                console.log(\"UPLOAD SUCCESS\", res);\r\n                                setLoading(false)\r\n                                uploadedFiles.push(res.data)\r\n                                setValues({ ...values, images: uploadedFiles })\r\n                            })\r\n                            .catch(err => {\r\n                                setLoading(false)\r\n                                console.log('CLOUDINARY UPLOAD ERR', err);\r\n                            })\r\n                    },\r\n                    'base64'\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleImageRemove = (public_id) => {\r\n        setLoading(true)\r\n        removeImage(user ? user.token : \"\", public_id)\r\n            .then(res => {\r\n                setLoading(false)\r\n                const { images } = values\r\n                const filteredImages = images.filter(image => image.public_id !== public_id)\r\n                setValues({ ...values, images: filteredImages })\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                {values.images &&\r\n                    values.images.map(image => (\r\n                        <Badge\r\n                            count=\"X\"\r\n                            key={image.public_id}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => handleImageRemove(image.public_id)}\r\n                        >\r\n                            <Avatar\r\n                                size={100}\r\n                                src={image.url}\r\n                                className=\"ml-3\"\r\n                                shape=\"square\"\r\n                            />\r\n                        </Badge>\r\n                    ))}\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <label className=\"btn btn-primary\">\r\n                    Choose file\r\n                <input\r\n                        type=\"file\"\r\n                        accept=\"images/*\"\r\n                        onChange={imageUploadAndResize}\r\n                        multiple\r\n                        hidden\r\n                    />\r\n                </label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx",["198"],"import React from 'react'\r\nimport { Card } from 'antd'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\n\r\nconst { Meta } = Card\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n    const { title, description, images, slug } = product\r\n\r\n    return (\r\n        <Card\r\n            hoverable\r\n            style={{ height: '150px', objectFit: \"cover\" }}\r\n            cover={<img src={images.length ? images[0].url : imgPlaceholder} />}\r\n            className=\"p-1\"\r\n            actions={[\r\n                <Link to={`/admin/product/${slug}/`}>\r\n                    <EditOutlined className=\"text-primary\" />\r\n                </Link>,\r\n                <DeleteOutlined\r\n                    className=\"text-danger\"\r\n                    onClick={() => handleRemove(slug)}\r\n                />\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={title}\r\n                description={`${description && description.substring(0, 40)}${description.length > 40 && '...'}`}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AdminProductCard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx",["199","200","201","202","203","204"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx",["205","206","207","208"],{"ruleId":"209","severity":1,"message":"210","line":56,"column":6,"nodeType":"211","endLine":56,"endColumn":8,"suggestions":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"217"},{"ruleId":"215","replacedBy":"218"},{"ruleId":"213","replacedBy":"219"},{"ruleId":"215","replacedBy":"220"},{"ruleId":"209","severity":1,"message":"221","line":22,"column":8,"nodeType":"211","endLine":22,"endColumn":14,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"221","line":13,"column":8,"nodeType":"211","endLine":13,"endColumn":14,"suggestions":"223"},{"ruleId":"213","replacedBy":"224"},{"ruleId":"215","replacedBy":"225"},{"ruleId":"213","replacedBy":"226"},{"ruleId":"215","replacedBy":"227"},{"ruleId":"209","severity":1,"message":"221","line":15,"column":8,"nodeType":"211","endLine":15,"endColumn":14,"suggestions":"228"},{"ruleId":"213","replacedBy":"229"},{"ruleId":"215","replacedBy":"230"},{"ruleId":"209","severity":1,"message":"221","line":18,"column":8,"nodeType":"211","endLine":18,"endColumn":15,"suggestions":"231"},{"ruleId":"213","replacedBy":"232"},{"ruleId":"215","replacedBy":"233"},{"ruleId":"209","severity":1,"message":"234","line":17,"column":8,"nodeType":"211","endLine":17,"endColumn":10,"suggestions":"235"},{"ruleId":"209","severity":1,"message":"236","line":21,"column":8,"nodeType":"211","endLine":21,"endColumn":10,"suggestions":"237"},{"ruleId":"209","severity":1,"message":"238","line":38,"column":8,"nodeType":"211","endLine":38,"endColumn":10,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":12,"column":9,"nodeType":"242","messageId":"243","endLine":12,"endColumn":17},{"ruleId":"240","severity":1,"message":"244","line":15,"column":9,"nodeType":"242","messageId":"243","endLine":15,"endColumn":15},{"ruleId":"240","severity":1,"message":"245","line":16,"column":9,"nodeType":"242","messageId":"243","endLine":16,"endColumn":17},{"ruleId":"240","severity":1,"message":"246","line":18,"column":9,"nodeType":"242","messageId":"243","endLine":18,"endColumn":14},{"ruleId":"240","severity":1,"message":"247","line":20,"column":9,"nodeType":"242","messageId":"243","endLine":20,"endColumn":14},{"ruleId":"240","severity":1,"message":"248","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":17,"column":20,"nodeType":"251","endLine":17,"endColumn":80},{"ruleId":"240","severity":1,"message":"252","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":15},{"ruleId":"240","severity":1,"message":"253","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":25},{"ruleId":"240","severity":1,"message":"254","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":23},{"ruleId":"240","severity":1,"message":"255","line":9,"column":25,"nodeType":"242","messageId":"243","endLine":9,"endColumn":40},{"ruleId":"240","severity":1,"message":"256","line":33,"column":13,"nodeType":"242","messageId":"243","endLine":33,"endColumn":17},{"ruleId":"209","severity":1,"message":"257","line":38,"column":8,"nodeType":"211","endLine":38,"endColumn":10,"suggestions":"258"},{"ruleId":"240","severity":1,"message":"259","line":4,"column":9,"nodeType":"242","messageId":"243","endLine":4,"endColumn":15},{"ruleId":"240","severity":1,"message":"260","line":12,"column":9,"nodeType":"242","messageId":"243","endLine":12,"endColumn":13},{"ruleId":"240","severity":1,"message":"244","line":14,"column":9,"nodeType":"242","messageId":"243","endLine":14,"endColumn":15},{"ruleId":"240","severity":1,"message":"245","line":15,"column":9,"nodeType":"242","messageId":"243","endLine":15,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["261"],"no-native-reassign",["262"],"no-negated-in-lhs",["263"],["262"],["263"],["262"],["263"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["264"],["265"],["262"],["263"],["262"],["263"],["266"],["262"],["263"],["267"],["262"],["263"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["270"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'images' is assigned a value but never used.","'shipping' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toast' is defined but never used.","'LoadingOutlined' is defined but never used.","'createProduct' is defined but never used.","'getCategorySubs' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["271"],"'Option' is assigned a value but never used.","'subs' is assigned a value but never used.",{"desc":"272","fix":"273"},"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"274","fix":"276"},{"desc":"274","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [dispatch]",{"range":"288","text":"289"},"Update the dependencies array to be: [history, user]",{"range":"290","text":"291"},{"range":"292","text":"291"},{"range":"293","text":"291"},"Update the dependencies array to be: [count, history]",{"range":"294","text":"295"},"Update the dependencies array to be: [loadCategory]",{"range":"296","text":"297"},"Update the dependencies array to be: [loadSub]",{"range":"298","text":"299"},"Update the dependencies array to be: [loadCategories]",{"range":"300","text":"301"},"Update the dependencies array to be: [loadProduct]",{"range":"302","text":"303"},[2073,2075],"[dispatch]",[798,804],"[history, user]",[394,400],[453,459],[503,510],"[count, history]",[614,616],"[loadCategory]",[766,768],"[loadSub]",[1241,1243],"[loadCategories]",[1207,1209],"[loadProduct]"]