[{"D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js":"1","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js":"2","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\Home.jsx":"3","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx":"4","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js":"5","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx":"6","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx":"7","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js":"8","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx":"9","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js":"10","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js":"11","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx":"12","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js":"13"},{"size":1459,"mtime":1608198698478,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607675520702,"results":"16","hashOfConfig":"15"},{"size":123,"mtime":1607678793664,"results":"17","hashOfConfig":"15"},{"size":4849,"mtime":1608201733521,"results":"18","hashOfConfig":"15"},{"size":913,"mtime":1607944000892,"results":"19","hashOfConfig":"15"},{"size":1635,"mtime":1608115717563,"results":"20","hashOfConfig":"15"},{"size":2117,"mtime":1608200199896,"results":"21","hashOfConfig":"15"},{"size":585,"mtime":1607766768348,"results":"22","hashOfConfig":"15"},{"size":3112,"mtime":1608202342939,"results":"23","hashOfConfig":"15"},{"size":147,"mtime":1607944523789,"results":"24","hashOfConfig":"15"},{"size":275,"mtime":1608032442773,"results":"25","hashOfConfig":"15"},{"size":2108,"mtime":1608115685113,"results":"26","hashOfConfig":"15"},{"size":238,"mtime":1608202275386,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7twgo8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js",["60"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js",[],["61","62"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\Home.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx",["63"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n            history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const googleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithPopup(googleAuthProvider)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n            history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Your email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n                autoFocus\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Your password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n        </div>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<MailOutlined />}\r\n            className=\"mb-3\"\r\n            disabled={!email || password.length < 6}\r\n            onClick={handleSubmit}\r\n            block\r\n        >\r\n            Login with Email/Password\r\n        </Button>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<GoogleOutlined />}\r\n            className=\"mb-3\"\r\n            onClick={googleLogin}\r\n            block\r\n            danger\r\n        >\r\n            Login with Google\r\n        </Button>\r\n        <Link\r\n            className=\"float-right text-danger\"\r\n            to=\"/forgot/password\"\r\n        >\r\n            Forgot Password?\r\n        </Link>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                            <h4>Login</h4>\r\n                        )}\r\n                    {loginForm()}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;\r\n",["64","65"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx",["66"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`)\r\n        localStorage.setItem('emailForRegistration', email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n        >\r\n            Register\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n",["67","68"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx",["69"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n\r\n        await auth\r\n            .sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success(`Link for password reset is sent to your email ${email}`)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const forgotPasswordForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n            disabled={!email}\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Forgot password</h4>\r\n                    }\r\n                    {forgotPasswordForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js",[],{"ruleId":"70","severity":1,"message":"71","line":34,"column":6,"nodeType":"72","endLine":34,"endColumn":8,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":22,"column":8,"nodeType":"72","endLine":22,"endColumn":14,"suggestions":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"70","severity":1,"message":"78","line":13,"column":8,"nodeType":"72","endLine":13,"endColumn":14,"suggestions":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"76","replacedBy":"84"},{"ruleId":"70","severity":1,"message":"78","line":15,"column":8,"nodeType":"72","endLine":15,"endColumn":14,"suggestions":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["89"],["87"],["88"],["90"],["87"],["88"],["91"],{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},{"desc":"94","fix":"97"},"Update the dependencies array to be: [dispatch]",{"range":"98","text":"99"},"Update the dependencies array to be: [history, user]",{"range":"100","text":"101"},{"range":"102","text":"101"},{"range":"103","text":"101"},[1006,1008],"[dispatch]",[766,772],"[history, user]",[394,400],[453,459]]