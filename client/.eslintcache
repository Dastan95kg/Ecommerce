[{"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"1","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx":"2","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx":"3","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js":"4","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js":"5","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx":"6","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js":"7","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js":"8","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"9","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx":"10","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx":"11","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx":"12","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx":"13","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx":"14","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js":"15","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx":"16","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js":"17","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js":"18","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx":"19","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx":"20","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx":"21","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx":"22","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx":"23","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx":"24","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx":"25","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx":"26","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx":"27","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx":"28","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx":"29","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx":"30","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx":"31","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx":"32","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx":"33","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js":"34","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js":"35","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx":"36","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx":"37","D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js":"38","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx":"39","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx":"40","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx":"41","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx":"42","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx":"43","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx":"44","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"45"},{"size":439,"mtime":1608307051688,"results":"46","hashOfConfig":"47"},{"size":4971,"mtime":1612610273401,"results":"48","hashOfConfig":"47"},{"size":3941,"mtime":1612610461647,"results":"49","hashOfConfig":"47"},{"size":362,"mtime":1607675520702,"results":"50","hashOfConfig":"47"},{"size":632,"mtime":1608307299018,"results":"51","hashOfConfig":"47"},{"size":3368,"mtime":1612604875707,"results":"52","hashOfConfig":"47"},{"size":1524,"mtime":1615366457592,"results":"53","hashOfConfig":"47"},{"size":913,"mtime":1607944000892,"results":"54","hashOfConfig":"47"},{"size":840,"mtime":1608307686218,"results":"55","hashOfConfig":"47"},{"size":1635,"mtime":1608115717563,"results":"56","hashOfConfig":"47"},{"size":2108,"mtime":1608115685113,"results":"57","hashOfConfig":"47"},{"size":438,"mtime":1608289883168,"results":"58","hashOfConfig":"47"},{"size":435,"mtime":1608288414170,"results":"59","hashOfConfig":"47"},{"size":4103,"mtime":1608655074555,"results":"60","hashOfConfig":"47"},{"size":585,"mtime":1607766768348,"results":"61","hashOfConfig":"47"},{"size":1623,"mtime":1615367512160,"results":"62","hashOfConfig":"47"},{"size":147,"mtime":1607944523789,"results":"63","hashOfConfig":"47"},{"size":1002,"mtime":1609215469180,"results":"64","hashOfConfig":"47"},{"size":1547,"mtime":1613711202275,"results":"65","hashOfConfig":"47"},{"size":439,"mtime":1608655082516,"results":"66","hashOfConfig":"47"},{"size":277,"mtime":1613714957963,"results":"67","hashOfConfig":"47"},{"size":813,"mtime":1608617776926,"results":"68","hashOfConfig":"47"},{"size":574,"mtime":1613725496622,"results":"69","hashOfConfig":"47"},{"size":803,"mtime":1613732480122,"results":"70","hashOfConfig":"47"},{"size":1919,"mtime":1615366954001,"results":"71","hashOfConfig":"47"},{"size":1919,"mtime":1615368694299,"results":"72","hashOfConfig":"47"},{"size":2329,"mtime":1608527153013,"results":"73","hashOfConfig":"47"},{"size":1294,"mtime":1608529582038,"results":"74","hashOfConfig":"47"},{"size":5517,"mtime":1608884324346,"results":"75","hashOfConfig":"47"},{"size":2151,"mtime":1608291889245,"results":"76","hashOfConfig":"47"},{"size":1979,"mtime":1608617915948,"results":"77","hashOfConfig":"47"},{"size":3634,"mtime":1609391038300,"results":"78","hashOfConfig":"47"},{"size":2959,"mtime":1608893728711,"results":"79","hashOfConfig":"47"},{"size":275,"mtime":1608032442773,"results":"80","hashOfConfig":"47"},{"size":839,"mtime":1608893583030,"results":"81","hashOfConfig":"47"},{"size":689,"mtime":1608288356338,"results":"82","hashOfConfig":"47"},{"size":3929,"mtime":1610527940237,"results":"83","hashOfConfig":"47"},{"size":3384,"mtime":1615371596589,"results":"84","hashOfConfig":"47"},{"size":2536,"mtime":1609934809548,"results":"85","hashOfConfig":"47"},{"size":3112,"mtime":1608202342939,"results":"86","hashOfConfig":"47"},{"size":842,"mtime":1615457817560,"results":"87","hashOfConfig":"47"},{"size":2648,"mtime":1615463502437,"results":"88","hashOfConfig":"47"},{"size":499,"mtime":1609395392636,"results":"89","hashOfConfig":"47"},{"size":2221,"mtime":1615452776312,"results":"90","hashOfConfig":"47"},{"size":697,"mtime":1608287144973,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"7twgo8",{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],["199","200"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx",["201","202"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct, getProduct, updateProduct } from '../../../functions/product'\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n    const [values, setValues] = useState(initialState)\r\n    const [categories, setCategories] = useState([])\r\n    const [subsIds, setSubsIds] = useState([])\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadProduct = () => {\r\n        getProduct(match.params.slug)\r\n            .then(resp => {\r\n                // 1. load single product\r\n                setValues({ ...values, ...resp.data })\r\n                // 2. load single product category subs\r\n                getCategorySubs(resp.data.category._id)\r\n                    .then(res => setSubOptions(res.data))\r\n                // 3. prepare array of sub ids to show as default sub\r\n                const arr = []\r\n                resp.data.subs.map(sub => arr.push(sub._id))\r\n                setSubsIds((prev) => arr)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loadCategories = () => {\r\n        getCategories()\r\n            .then(categories => setCategories(categories.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        values.subs = subsIds\r\n        values.category = selectedCategory ? selectedCategory : values.category\r\n\r\n        updateProduct(match.params.slug, values, user.token)\r\n            .then(response => {\r\n                debugger\r\n                setLoading(false)\r\n                toast.success(`\"${response.data.title}\" is updated`)\r\n                history.push('/admin/products')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(err.response.data.err)\r\n            })\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        setSelectedCategory(e.target.value)\r\n        getCategorySubs(e.target.value)\r\n            .then(resp => setSubOptions(resp.data))\r\n\r\n        // clear subcategories array of ids\r\n        setSubsIds([])\r\n        // if user clicks back to the original category\r\n        // show its sub categories in default\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product update</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductUpdateForm\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        categories={categories}\r\n                        subsIds={subsIds}\r\n                        setSubsIds={setSubsIds}\r\n                        subOptions={subOptions}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate",["203","204"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx",["205","206"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductUpdateForm = ({\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n    categories,\r\n    subsIds,\r\n    setSubsIds,\r\n    subOptions,\r\n    handleCategoryChange,\r\n    selectedCategory\r\n}) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        category,\r\n        subs,\r\n        quantity,\r\n        images,\r\n        shipping,\r\n        colors,\r\n        color,\r\n        brands,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"mb-5\">\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input className=\"form-control\" type=\"text\" value={title} name=\"title\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input className=\"form-control\" type=\"text\" value={description} name=\"description\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input className=\"form-control\" type=\"number\" value={price} name=\"price\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select name=\"shipping\" className=\"form-control\" value={shipping} onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input className=\"form-control\" type=\"number\" value={quantity} name=\"quantity\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select name=\"color\" className=\"form-control\" onChange={handleChange} value={color}>\r\n                    {colors.map(c => (\r\n                        <option key={c} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Brand</label>\r\n                <select name=\"brand\" className=\"form-control\" onChange={handleChange} value={brand}>\r\n                    {brands.map(b => (\r\n                        <option key={b} value={b}>{b}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    name=\"category\"\r\n                    className=\"form-control\"\r\n                    value={selectedCategory ? selectedCategory : category._id}\r\n                    onChange={handleCategoryChange}\r\n                >\r\n                    {categories.length > 0 &&\r\n                        categories.map(c => (\r\n                            <option key={c._id} value={c._id}>{c.name}</option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Sub Categories</label>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: '100%' }}\r\n                    value={subsIds}\r\n                    placeholder=\"Please select\"\r\n                    onChange={value => setSubsIds(value)}\r\n                >\r\n                    {subOptions.length && subOptions.map(s => (\r\n                        <Option key={s._id} value={s._id}>{s.name}</Option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductUpdateForm\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js",[],["207","208"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx",["209"],"import React from 'react'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { Avatar, Badge } from 'antd';\r\n\r\nimport { removeImage, uploadImages } from '../../functions/product';\r\n\r\nconst FileUpload = ({ values, setValues, setLoading }) => {\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    const imageUploadAndResize = (e) => {\r\n        const files = e.target.files\r\n        const uploadedFiles = values.images\r\n\r\n        if (files.length) {\r\n            setLoading(true)\r\n            for (let i = 0; i < files.length; i++) {\r\n                Resizer.imageFileResizer(\r\n                    files[i],\r\n                    720,\r\n                    720,\r\n                    'JPEG',\r\n                    100,\r\n                    0,\r\n                    uri => {\r\n                        uploadImages(user ? user.token : \"\", uri)\r\n                            .then(res => {\r\n                                console.log(\"UPLOAD SUCCESS\", res);\r\n                                setLoading(false)\r\n                                uploadedFiles.push(res.data)\r\n                                setValues({ ...values, images: uploadedFiles })\r\n                            })\r\n                            .catch(err => {\r\n                                setLoading(false)\r\n                                console.log('CLOUDINARY UPLOAD ERR', err);\r\n                            })\r\n                    },\r\n                    'base64'\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleImageRemove = (public_id) => {\r\n        setLoading(true)\r\n        removeImage(user ? user.token : \"\", public_id)\r\n            .then(res => {\r\n                setLoading(false)\r\n                const { images } = values\r\n                const filteredImages = images.filter(image => image.public_id !== public_id)\r\n                setValues({ ...values, images: filteredImages })\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                {values.images &&\r\n                    values.images.map(image => (\r\n                        <Badge\r\n                            count=\"X\"\r\n                            key={image.public_id}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => handleImageRemove(image.public_id)}\r\n                        >\r\n                            <Avatar\r\n                                size={100}\r\n                                src={image.url}\r\n                                className=\"ml-3\"\r\n                                shape=\"square\"\r\n                            />\r\n                        </Badge>\r\n                    ))}\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <label className=\"btn btn-primary btn-raised\">\r\n                    Choose file\r\n                <input\r\n                        type=\"file\"\r\n                        accept=\"images/*\"\r\n                        onChange={imageUploadAndResize}\r\n                        multiple\r\n                        hidden\r\n                    />\r\n                </label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n",["210","211"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js",[],["212","213"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx",["214"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`)\r\n        localStorage.setItem('emailForRegistration', email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n        >\r\n            Register\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx",["215"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n\r\n        await auth\r\n            .sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success(`Link for password reset is sent to your email ${email}`)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const forgotPasswordForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n            disabled={!email}\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Forgot password</h4>\r\n                    }\r\n                    {forgotPasswordForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx",["216"],"import React from 'react'\r\nimport { Card } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\n\r\nconst { Meta } = Card\r\n\r\nconst Styled = styled.div`\r\n    .ant-card-bordered .ant-card-cover {\r\n        height: 150px;\r\n    }\r\n\r\n    .ant-card-cover img {\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .ant-card-body {\r\n        height: 116px;\r\n    }\r\n`\r\n\r\nconst ProductCard = ({ product }) => {\r\n    const { title, description, images, slug } = product\r\n\r\n    return (\r\n        <Styled>\r\n            <Card\r\n                style={{ objectFit: \"cover\" }}\r\n                cover={<img src={images.length ? images[0].url : imgPlaceholder} />}\r\n                className=\"p-1\"\r\n                actions={[\r\n                    <Link to={`/product/${slug}/`}>\r\n                        <EyeOutlined className=\"text-primary\" />\r\n                        <br /> View Product\r\n                    </Link>,\r\n                    <>\r\n                        <ShoppingCartOutlined\r\n                            className=\"text-danger\"\r\n                        />\r\n                        <br /> Add to Cart\r\n                    </>\r\n                ]}\r\n            >\r\n                <Meta\r\n                    title={title}\r\n                    description={`${description && description.substring(0, 40)}${(description.length > 40) ? '...' : ''}`}\r\n                />\r\n            </Card>\r\n        </Styled>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js",[],["217","218"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx",["219"],"import React from 'react'\r\nimport { Card } from 'antd'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\n\r\nconst { Meta } = Card\r\n\r\nconst Styled = styled.div`\r\n    .ant-card-bordered .ant-card-cover {\r\n        height: 150px;\r\n    }\r\n\r\n    .ant-card-cover img {\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .ant-card-body {\r\n        height: 116px;\r\n    }\r\n`\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n    const { title, description, images, slug } = product\r\n\r\n    return (\r\n        <Styled>\r\n            <Card\r\n                style={{ objectFit: \"cover\" }}\r\n                cover={<img src={images.length ? images[0].url : imgPlaceholder} />}\r\n                className=\"p-1\"\r\n                actions={[\r\n                    <Link to={`/admin/product/${slug}/`}>\r\n                        <EditOutlined className=\"text-primary\" />\r\n                    </Link>,\r\n                    <DeleteOutlined\r\n                        className=\"text-danger\"\r\n                        onClick={() => handleRemove(slug)}\r\n                    />\r\n                ]}\r\n            >\r\n                <Meta\r\n                    title={title}\r\n                    description={`${description && description.substring(0, 40)}${description.length > 40 && '...'}`}\r\n                />\r\n            </Card>\r\n        </Styled>\r\n    )\r\n}\r\n\r\nexport default AdminProductCard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx",["220"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx",[],["221","222"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx",["223"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('dastan.maratov95@gmail.com')\r\n    const [password, setPassword] = useState('123456')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const roleBasedRedirect = (data) => {\r\n        if (data.role === 'admin') {\r\n            history.push('/admin/dashboard')\r\n        } else {\r\n            history.push('/user/history')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const googleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithPopup(googleAuthProvider)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Your email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n                autoFocus\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Your password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n        </div>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<MailOutlined />}\r\n            className=\"mb-3\"\r\n            disabled={!email || password.length < 6}\r\n            onClick={handleSubmit}\r\n            block\r\n        >\r\n            Login with Email/Password\r\n        </Button>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<GoogleOutlined />}\r\n            className=\"mb-3\"\r\n            onClick={googleLogin}\r\n            block\r\n            danger\r\n        >\r\n            Login with Google\r\n        </Button>\r\n        <Link\r\n            className=\"float-right text-danger\"\r\n            to=\"/forgot/password\"\r\n        >\r\n            Forgot Password?\r\n        </Link>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                            <h4>Login</h4>\r\n                        )}\r\n                    {loginForm()}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx",["224"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx",["225"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct } from '../../../functions/product'\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductCreate = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [values, setValues] = useState(initialState)\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [showSubs, setShowSubs] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(categories => setValues({ ...values, categories: categories.data }))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const response = await createProduct(user.token, values)\r\n            window.alert(`\"${response.data.title}\" successfully created`)\r\n            window.location.reload()\r\n            setLoading(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error(err.response.data.err)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.value) {\r\n            setValues({ ...values, subs: [], category: e.target.value })\r\n            getCategorySubs(e.target.value)\r\n                .then(res => {\r\n                    setSubOptions(res.data)\r\n                    setShowSubs(true)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product create</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductCreateForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        showSubs={showSubs}\r\n                        subOptions={subOptions}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCreate","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx",["226"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategories } from '../../../functions/category'\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\n\r\nconst SubUpdate = ({ history, match }) => {\r\n    const [subName, setSubName] = useState('')\r\n    const [parent, setParent] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadSub()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadSub = async () => {\r\n        getSub(match.params.slug).then(res => {\r\n            setSubName(res.data.name)\r\n            setParent(res.data.parent)\r\n        })\r\n    }\r\n\r\n    const loadCategories = async () => {\r\n        getCategories().then(res => setCategories(res.data))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateSub(user.token, parent, subName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/sub')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update sub category</h4>\r\n                    }\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={e => setParent(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 && categories.map(c => (\r\n                                <option key={c._id} value={c._id} selected={c._id === parent}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={subName}\r\n                        setCategoryName={setSubName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\userReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx",["227","228","229","230","231"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js",["232"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx",["233"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx",["234"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":23},{"ruleId":"244","severity":1,"message":"245","line":41,"column":8,"nodeType":"246","endLine":41,"endColumn":10,"suggestions":"247"},{"ruleId":"236","replacedBy":"248"},{"ruleId":"238","replacedBy":"249"},{"ruleId":"240","severity":1,"message":"250","line":23,"column":9,"nodeType":"242","messageId":"243","endLine":23,"endColumn":13},{"ruleId":"240","severity":1,"message":"251","line":25,"column":9,"nodeType":"242","messageId":"243","endLine":25,"endColumn":15},{"ruleId":"236","replacedBy":"252"},{"ruleId":"238","replacedBy":"253"},{"ruleId":"240","severity":1,"message":"254","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"236","replacedBy":"255"},{"ruleId":"238","replacedBy":"256"},{"ruleId":"236","replacedBy":"257"},{"ruleId":"238","replacedBy":"258"},{"ruleId":"244","severity":1,"message":"259","line":13,"column":8,"nodeType":"246","endLine":13,"endColumn":14,"suggestions":"260"},{"ruleId":"244","severity":1,"message":"259","line":15,"column":8,"nodeType":"246","endLine":15,"endColumn":14,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":33,"column":24,"nodeType":"264","endLine":33,"endColumn":84},{"ruleId":"236","replacedBy":"265"},{"ruleId":"238","replacedBy":"266"},{"ruleId":"262","severity":1,"message":"263","line":33,"column":24,"nodeType":"264","endLine":33,"endColumn":84},{"ruleId":"244","severity":1,"message":"267","line":16,"column":8,"nodeType":"246","endLine":16,"endColumn":14,"suggestions":"268"},{"ruleId":"236","replacedBy":"269"},{"ruleId":"238","replacedBy":"270"},{"ruleId":"244","severity":1,"message":"259","line":22,"column":8,"nodeType":"246","endLine":22,"endColumn":14,"suggestions":"271"},{"ruleId":"244","severity":1,"message":"272","line":17,"column":8,"nodeType":"246","endLine":17,"endColumn":10,"suggestions":"273"},{"ruleId":"244","severity":1,"message":"274","line":38,"column":8,"nodeType":"246","endLine":38,"endColumn":10,"suggestions":"275"},{"ruleId":"244","severity":1,"message":"276","line":21,"column":8,"nodeType":"246","endLine":21,"endColumn":10,"suggestions":"277"},{"ruleId":"240","severity":1,"message":"278","line":12,"column":9,"nodeType":"242","messageId":"243","endLine":12,"endColumn":17},{"ruleId":"240","severity":1,"message":"251","line":15,"column":9,"nodeType":"242","messageId":"243","endLine":15,"endColumn":15},{"ruleId":"240","severity":1,"message":"279","line":16,"column":9,"nodeType":"242","messageId":"243","endLine":16,"endColumn":17},{"ruleId":"240","severity":1,"message":"280","line":18,"column":9,"nodeType":"242","messageId":"243","endLine":18,"endColumn":14},{"ruleId":"240","severity":1,"message":"281","line":20,"column":9,"nodeType":"242","messageId":"243","endLine":20,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"282","line":80,"column":7},{"ruleId":"244","severity":1,"message":"283","line":11,"column":8,"nodeType":"246","endLine":11,"endColumn":10,"suggestions":"284"},{"ruleId":"262","severity":1,"message":"263","line":33,"column":21,"nodeType":"264","endLine":33,"endColumn":77},{"ruleId":"244","severity":1,"message":"259","line":17,"column":8,"nodeType":"246","endLine":17,"endColumn":15,"suggestions":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'createProduct' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.","ArrayExpression",["288"],["286"],["287"],"'subs' is assigned a value but never used.","'images' is assigned a value but never used.",["286"],["287"],"'axios' is defined but never used.",["286"],["287"],["286"],["287"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["289"],["290"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["286"],["287"],"React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["291"],["286"],["287"],["292"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["295"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","Parsing error: Unexpected token\n\n  78 |         <AdminRoute exact path=\"/admin/products\" component={AllProducts} />\n  79 |         <Route\n> 80 |       </Switch>\n     |       ^\n  81 |     </>\n  82 |   )\n  83 | }","React Hook useEffect has a missing dependency: 'match.params.slug'. Either include it or remove the dependency array.",["296"],["297"],"no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"300","fix":"302"},{"desc":"303","fix":"304"},{"desc":"300","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [loadProduct]",{"range":"316","text":"317"},"Update the dependencies array to be: [history, user]",{"range":"318","text":"319"},{"range":"320","text":"319"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"321","text":"322"},{"range":"323","text":"319"},"Update the dependencies array to be: [loadCategory]",{"range":"324","text":"325"},"Update the dependencies array to be: [loadCategories]",{"range":"326","text":"327"},"Update the dependencies array to be: [loadSub]",{"range":"328","text":"329"},"Update the dependencies array to be: [match.params.slug]",{"range":"330","text":"331"},"Update the dependencies array to be: [count, history]",{"range":"332","text":"333"},[1424,1426],"[loadProduct]",[394,400],"[history, user]",[453,459],[583,589],"[loadAllProducts, page]",[798,804],[614,616],"[loadCategory]",[1241,1243],"[loadCategories]",[766,768],"[loadSub]",[375,377],"[match.params.slug]",[501,508],"[count, history]"]