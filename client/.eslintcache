[{"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js":"1","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js":"2","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx":"3","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Search.jsx":"4","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\modal\\RatingModal.jsx":"5","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\shop\\Shop.jsx":"6","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js":"7","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx":"8","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx":"9","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx":"10","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js":"11","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"12","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx":"13","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx":"14","D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js":"15","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx":"16","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx":"17","D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js":"18","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx":"19","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx":"20","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Star.jsx":"21","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"22","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx":"23","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx":"24","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\category\\CategoryList.jsx":"25","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx":"26","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx":"27","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx":"28","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx":"29","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx":"30","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx":"31","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx":"32","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx":"33","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx":"34","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx":"35","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\sub\\SubHome.jsx":"36","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\category\\CategoryHome.jsx":"37","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx":"38","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx":"39","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\searchReducer.js":"40","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js":"41","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\sub\\SubList.jsx":"42","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js":"43","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\cartReducer.js":"44","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx":"45","D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js":"46","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\cart\\Cart.jsx":"47","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx":"48","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\rating.js":"49","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx":"50","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx":"51","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx":"52","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.jsx":"53","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx":"54","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx":"55","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"56","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\drawerReducer.js":"57","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\drawer\\SideDrawer.jsx":"58","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx":"59","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\checkout\\Checkout.jsx":"60"},{"size":632,"mtime":1608307299018,"results":"61","hashOfConfig":"62"},{"size":839,"mtime":1608893583030,"results":"63","hashOfConfig":"62"},{"size":439,"mtime":1608655082516,"results":"64","hashOfConfig":"62"},{"size":1219,"mtime":1619607971818,"results":"65","hashOfConfig":"62"},{"size":1457,"mtime":1615531181648,"results":"66","hashOfConfig":"62"},{"size":13228,"mtime":1619783489562,"results":"67","hashOfConfig":"62"},{"size":2127,"mtime":1619671574864,"results":"68","hashOfConfig":"62"},{"size":1919,"mtime":1619671584882,"results":"69","hashOfConfig":"62"},{"size":1897,"mtime":1619671703508,"results":"70","hashOfConfig":"62"},{"size":3227,"mtime":1620041977797,"results":"71","hashOfConfig":"62"},{"size":913,"mtime":1620041788651,"results":"72","hashOfConfig":"62"},{"size":840,"mtime":1608307686218,"results":"73","hashOfConfig":"62"},{"size":2798,"mtime":1620102453294,"results":"74","hashOfConfig":"62"},{"size":5844,"mtime":1620029009114,"results":"75","hashOfConfig":"62"},{"size":585,"mtime":1607766768348,"results":"76","hashOfConfig":"62"},{"size":3929,"mtime":1610527940237,"results":"77","hashOfConfig":"62"},{"size":574,"mtime":1613725496622,"results":"78","hashOfConfig":"62"},{"size":362,"mtime":1607675520702,"results":"79","hashOfConfig":"62"},{"size":3112,"mtime":1608202342939,"results":"80","hashOfConfig":"62"},{"size":2221,"mtime":1615452776312,"results":"81","hashOfConfig":"62"},{"size":571,"mtime":1619773365167,"results":"82","hashOfConfig":"62"},{"size":439,"mtime":1608307051688,"results":"83","hashOfConfig":"62"},{"size":3634,"mtime":1609391038300,"results":"84","hashOfConfig":"62"},{"size":813,"mtime":1608617776926,"results":"85","hashOfConfig":"62"},{"size":1054,"mtime":1615548037908,"results":"86","hashOfConfig":"62"},{"size":1635,"mtime":1608115717563,"results":"87","hashOfConfig":"62"},{"size":2108,"mtime":1608115685113,"results":"88","hashOfConfig":"62"},{"size":435,"mtime":1608288414170,"results":"89","hashOfConfig":"62"},{"size":438,"mtime":1608289883168,"results":"90","hashOfConfig":"62"},{"size":4103,"mtime":1608655074555,"results":"91","hashOfConfig":"62"},{"size":2151,"mtime":1608291889245,"results":"92","hashOfConfig":"62"},{"size":2668,"mtime":1615545881185,"results":"93","hashOfConfig":"62"},{"size":499,"mtime":1609395392636,"results":"94","hashOfConfig":"62"},{"size":1979,"mtime":1608617915948,"results":"95","hashOfConfig":"62"},{"size":2959,"mtime":1608893728711,"results":"96","hashOfConfig":"62"},{"size":1833,"mtime":1619597802332,"results":"97","hashOfConfig":"62"},{"size":1889,"mtime":1619597544963,"results":"98","hashOfConfig":"62"},{"size":1219,"mtime":1619597346304,"results":"99","hashOfConfig":"62"},{"size":4971,"mtime":1612610273401,"results":"100","hashOfConfig":"62"},{"size":241,"mtime":1619602993964,"results":"101","hashOfConfig":"62"},{"size":1002,"mtime":1609215469180,"results":"102","hashOfConfig":"62"},{"size":998,"mtime":1619597465993,"results":"103","hashOfConfig":"62"},{"size":361,"mtime":1620041745783,"results":"104","hashOfConfig":"62"},{"size":250,"mtime":1620019860374,"results":"105","hashOfConfig":"62"},{"size":4146,"mtime":1620020608744,"results":"106","hashOfConfig":"62"},{"size":4299,"mtime":1620104175296,"results":"107","hashOfConfig":"62"},{"size":3468,"mtime":1620117665986,"results":"108","hashOfConfig":"62"},{"size":689,"mtime":1608288356338,"results":"109","hashOfConfig":"62"},{"size":749,"mtime":1615541791124,"results":"110","hashOfConfig":"62"},{"size":277,"mtime":1613714957963,"results":"111","hashOfConfig":"62"},{"size":3941,"mtime":1612610461647,"results":"112","hashOfConfig":"62"},{"size":3368,"mtime":1612604875707,"results":"113","hashOfConfig":"62"},{"size":4464,"mtime":1620040341201,"results":"114","hashOfConfig":"62"},{"size":4916,"mtime":1608810943211,"results":"115","hashOfConfig":"62"},{"size":1294,"mtime":1608529582038,"results":"116","hashOfConfig":"62"},{"size":697,"mtime":1608287144973,"results":"117","hashOfConfig":"62"},{"size":215,"mtime":1620041716081,"results":"118","hashOfConfig":"62"},{"size":1953,"mtime":1620102633813,"results":"119","hashOfConfig":"62"},{"size":1547,"mtime":1613711202275,"results":"120","hashOfConfig":"62"},{"size":1600,"mtime":1620125897295,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"7twgo8",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"195"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"177"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\auth.js",[],["266","267"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\sub.js",[],["268","269"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\LocalSearch.jsx",[],["270","271"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Search.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\modal\\RatingModal.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\shop\\Shop.jsx",["272","273","274","275"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Menu, Radio, Slider } from 'antd'\r\nimport { DollarOutlined, DownSquareOutlined, StarOutlined } from '@ant-design/icons'\r\n\r\nimport { getProductsCount, fetchProductsByFilter } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport { getCategories } from '../../functions/category'\r\nimport { getSubs } from '../../functions/sub'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox'\r\nimport Star from '../../components/forms/Star'\r\n\r\nconst { Item, SubMenu } = Menu\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [price, setPrice] = useState([0, 0])\r\n    const [ok, setOk] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n    const [selectedCategories, setSelectedCategories] = useState([])\r\n    const [star, setStar] = useState('')\r\n    const [subs, setSubs] = useState([])\r\n    const [sub, setSub] = useState('')\r\n    const [brands, setBrands] = useState(['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'])\r\n    const [brand, setBrand] = useState('')\r\n    const [colors, setColors] = useState(['Black', 'Brown', 'Silver', 'White', 'Blue'])\r\n    const [color, setColor] = useState('')\r\n    const [shipping, setShipping] = useState('')\r\n\r\n    const { text } = useSelector(state => state.search)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // 1. load products by default on page load\r\n    useEffect(() => {\r\n        loadProducts()\r\n\r\n        getCategories().then(res => setCategories(res.data))\r\n\r\n        getSubs().then(res => setSubs(res.data))\r\n    }, [])\r\n\r\n    const loadProducts = () => {\r\n        setLoading(true)\r\n        getProductsCount(12)\r\n            .then(res => setProducts(res.data))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    // 2. load products on search input\r\n    useEffect(() => {\r\n        if (text.trim()) {\r\n            const delayed = setTimeout(() => {\r\n                fetchProducts({ query: text })\r\n            }, 800)\r\n\r\n            return () => clearTimeout(delayed)\r\n        }\r\n    }, [text])\r\n\r\n    const fetchProducts = (arg) => {\r\n        fetchProductsByFilter(arg)\r\n            .then(res => setProducts(res.data))\r\n    }\r\n\r\n    // 3. load products on price change\r\n    const handleSlider = (value) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setPrice(value)\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 800)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts({ price })\r\n    }, [ok])\r\n\r\n    // 4. load products based on choosing categories\r\n    const handleCheck = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        const arr = [...selectedCategories]\r\n        const elem = e.target.value\r\n        const elemIndex = arr.indexOf(elem)\r\n\r\n        if (elemIndex === -1) {\r\n            arr.push(elem)\r\n        } else {\r\n            arr.splice(elemIndex, 1)\r\n        }\r\n\r\n        setSelectedCategories(arr)\r\n        fetchProducts({ category: arr })\r\n    }\r\n\r\n    // 5. load products by rating\r\n    const handleStarClick = (num) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setStar(num)\r\n        fetchProducts({ stars: num })\r\n    }\r\n\r\n    const showStars = () => (\r\n        <>\r\n            <Star starsNumber={5} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={4} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={3} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={2} onStarClick={handleStarClick} activeStar={star} />\r\n            <Star starsNumber={1} onStarClick={handleStarClick} activeStar={star} />\r\n        </>\r\n    )\r\n\r\n    // 6. load products by subs\r\n    const showSubs = () => subs.map(s => (\r\n        <div\r\n            key={s._id}\r\n            className={`p-1 m-1 badge badge-${sub === s ? 'info' : 'secondary'}`}\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => handleSub(s)}\r\n        >\r\n            {s.name}\r\n        </div>\r\n    ))\r\n\r\n    const handleSub = (sub) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setBrand('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setSub(sub)\r\n        fetchProducts({ sub })\r\n    }\r\n\r\n    // 7. load products by brand\r\n    const showBrands = () => brands.map(b => (\r\n        <>\r\n            <Radio\r\n                key={b}\r\n                name={b}\r\n                value={b}\r\n                onChange={handleBrand}\r\n                checked={b === brand}\r\n            >\r\n                {b}\r\n            </Radio>\r\n            <br />\r\n        </>\r\n    ))\r\n\r\n    const handleBrand = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setColor('')\r\n        setShipping('')\r\n\r\n        setBrand(e.target.value)\r\n        fetchProducts({ brand: e.target.value })\r\n    }\r\n\r\n    // 8. load products by color\r\n    const showColors = () => colors.map(c => (\r\n        <>\r\n            <Radio\r\n                key={c}\r\n                name={c}\r\n                value={c}\r\n                onChange={handleColor}\r\n                checked={c === color}\r\n            >\r\n                {c}\r\n            </Radio>\r\n            <br />\r\n        </>\r\n    ))\r\n\r\n    const handleColor = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setShipping('')\r\n\r\n        setColor(e.target.value)\r\n        fetchProducts({ color: e.target.value })\r\n    }\r\n\r\n    // 9. load products by shipping\r\n    const showShipping = () => (\r\n        <>\r\n            <Checkbox\r\n                value='Yes'\r\n                onChange={handleShipping}\r\n                className=\"my-1\"\r\n                checked={shipping === 'Yes'}\r\n            >\r\n                Yes\r\n            </Checkbox>\r\n            <br />\r\n            <Checkbox\r\n                value='No'\r\n                onChange={handleShipping}\r\n                className=\"my-1\"\r\n                checked={shipping === 'No'}\r\n            >\r\n                No\r\n            </Checkbox>\r\n        </>\r\n    )\r\n\r\n    const handleShipping = (e) => {\r\n        // reset other filter data\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: '' }\r\n        })\r\n        setPrice([0, 0])\r\n        setSelectedCategories([])\r\n        setStar('')\r\n        setSub('')\r\n        setBrand('')\r\n        setColor('')\r\n\r\n        setShipping(e.target.value)\r\n        fetchProducts({ shipping: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-md-3\">\r\n                    <h4>Search/Filter</h4>\r\n                    <hr />\r\n\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\r\n                    >\r\n                        <SubMenu\r\n                            key=\"1\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DollarOutlined /> Price\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div>\r\n                                <Slider\r\n                                    range\r\n                                    max=\"100000\"\r\n                                    className=\"mx-4\"\r\n                                    tipFormatter={v => `$${v}`}\r\n                                    value={price}\r\n                                    onChange={handleSlider}\r\n                                />\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"2\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Category\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {categories.map(c => (\r\n                                <div key={c._id}>\r\n                                    <Checkbox\r\n                                        className=\"pb-2 px-4\"\r\n                                        value={c._id}\r\n                                        name=\"category\"\r\n                                        onChange={handleCheck}\r\n                                        checked={selectedCategories.includes(c._id)}\r\n                                    >\r\n                                        {c.name}\r\n                                    </Checkbox>\r\n                                </div>\r\n                            ))}\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"3\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <StarOutlined /> Rating\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showStars()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"4\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Sub Categories\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showSubs()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"5\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Brands\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showBrands()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"6\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Colors\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showColors()}</div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu\r\n                            key=\"7\"\r\n                            title={\r\n                                <span className=\"h6\">\r\n                                    <DownSquareOutlined /> Shipping\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <div className=\"pb-2 px-4\">{showShipping()}</div>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <h4 className=\"text-danger\">{loading ? 'Loading...' : 'Products'}</h4>\r\n                    <div className=\"row\">\r\n                        {products.length ? products.map(product => (\r\n                            <div\r\n                                className=\"col-md-4\"\r\n                                key={product.id}\r\n                            >\r\n                                <ProductCard\r\n                                    product={product}\r\n                                />\r\n                            </div>\r\n                        )) : (\r\n                            <div>Products no found</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\product.js",[],["276","277"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\NewArrivals.jsx",["278"],"import React, { useEffect, useState } from 'react'\r\nimport { Pagination } from 'antd'\r\n\r\nimport LoadingCard from '../../components/cards/LoadingCard';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nimport { getHomeProducts, getProductsTotal } from '../../functions/product'\r\n\r\nconst NewArrivals = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [totalProducts, setTotalProducts] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsTotal().then(res => setTotalProducts(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getHomeProducts('createdAt', 'desc', page)\r\n            .then(res => {\r\n                setProducts(res.data)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? <LoadingCard count={3} /> : (\r\n                <>\r\n                    <div className=\"row mb-3\">\r\n                        {products.map(product => (\r\n                            <div\r\n                                key={product._id}\r\n                                className=\"col-md-4\"\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            current={page}\r\n                            total={totalProducts / 3 * 10}\r\n                            onChange={value => setPage(value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewArrivals\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\home\\BestSellers.jsx",["279"],"import React, { useEffect, useState } from 'react'\r\nimport { Pagination } from 'antd'\r\n\r\nimport LoadingCard from '../../components/cards/LoadingCard';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nimport { getHomeProducts, getProductsTotal } from '../../functions/product'\r\n\r\nconst BestSellers = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [totalProducts, setTotalProducts] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsTotal().then(res => setTotalProducts(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getHomeProducts('sold', 'desc', page)\r\n            .then(res => setProducts(res.data))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pb-5\">\r\n            {loading ? <LoadingCard count={3} /> : (\r\n                <>\r\n                    <div className=\"row mb-3\">\r\n                        {products.map(product => (\r\n                            <div\r\n                                key={product._id}\r\n                                className=\"col-md-4\"\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            current={page}\r\n                            total={totalProducts / 3 * 10}\r\n                            onChange={value => setPage(value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BestSellers\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCard.jsx",["280","281"],"import React, { useState } from 'react'\r\nimport { Card, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\nimport showAverage from '../../functions/rating'\r\n\r\nconst { Meta } = Card\r\n\r\nconst Styled = styled.div`\r\n    .ant-card-bordered .ant-card-cover {\r\n        height: 150px;\r\n    }\r\n\r\n    .ant-card-cover img {\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .ant-card-body {\r\n        height: 116px;\r\n    }\r\n`\r\n\r\nconst ProductCard = ({ product }) => {\r\n    const { title, description, images, slug, price } = product\r\n\r\n    const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== undefined) {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            // set only unique objects\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n            localStorage.setItem('cart', JSON.stringify(unique))\r\n\r\n            // show tooltip\r\n            setTooltip('Added to cart')\r\n\r\n            // save to redux store\r\n            dispatch({\r\n                type: 'ADD_TO_CART',\r\n                payload: unique\r\n            })\r\n\r\n            dispatch({\r\n                type: 'SET_DRAWER',\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styled>\r\n            <div className=\"text-center mb-2\">\r\n                {product && product.ratings && product.ratings.length ? showAverage(product) : 'No ratings yet'}\r\n            </div>\r\n            <Card\r\n                style={{ objectFit: \"cover\" }}\r\n                cover={<img src={images.length ? images[0].url : imgPlaceholder} />}\r\n                className=\"p-1\"\r\n                actions={[\r\n                    <Link to={`/product/${slug}/`}>\r\n                        <EyeOutlined className=\"text-primary\" />\r\n                        <br /> View Product\r\n                    </Link>,\r\n                    <Tooltip title={tooltip}>\r\n                        <a onClick={handleAddToCart}>\r\n                            <ShoppingCartOutlined\r\n                                className=\"text-danger\"\r\n                            />\r\n                            <br /> Add to Cart\r\n                        </a>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <Meta\r\n                    title={\r\n                        <>\r\n                            <div>{title}</div>\r\n                            <div className=\"text-danger\">$ {price}</div>\r\n                        </>\r\n                    }\r\n                    description={`${description && description.substring(0, 40)}${(description.length > 40) ? '...' : ''}`}\r\n                />\r\n            </Card>\r\n        </Styled>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\index.js",[],["282","283"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\Header.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Login.jsx",["284"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('dastan.maratov95@gmail.com')\r\n    const [password, setPassword] = useState('123456')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        const intended = history.location.state\r\n        if (intended) {\r\n            return\r\n        } else {\r\n            user && user.token && history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const roleBasedRedirect = (data) => {\r\n        // intended page\r\n        debugger\r\n        const intended = history.location.state\r\n        if (intended) {\r\n            history.push(intended.from)\r\n        } else {\r\n            if (data.role === 'admin') {\r\n                history.push('/admin/dashboard')\r\n            } else {\r\n                history.push('/user/history')\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const googleLogin = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { user } = await auth.signInWithPopup(googleAuthProvider)\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token)\r\n                .then(res => {\r\n                    const { data } = res\r\n                    setLoading(false)\r\n                    dispatch({\r\n                        type: 'LOGGED_IN_USER',\r\n                        payload: {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            role: data.role,\r\n                            _id: data._id,\r\n                            token: idTokenResult.token\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(data)\r\n                })\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                    console.log(err)\r\n                })\r\n\r\n            // history.push('/')\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Your email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n                autoFocus\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Your password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n            />\r\n        </div>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<MailOutlined />}\r\n            className=\"mb-3\"\r\n            disabled={!email || password.length < 6}\r\n            onClick={handleSubmit}\r\n            block\r\n        >\r\n            Login with Email/Password\r\n        </Button>\r\n        <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            htmlType=\"submit\"\r\n            icon={<GoogleOutlined />}\r\n            className=\"mb-3\"\r\n            onClick={googleLogin}\r\n            block\r\n            danger\r\n        >\r\n            Login with Google\r\n        </Button>\r\n        <Link\r\n            className=\"float-right text-danger\"\r\n            to=\"/forgot/password\"\r\n        >\r\n            Forgot Password?\r\n        </Link>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4>Login</h4>\r\n                    )}\r\n                    {loginForm()}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;\r\n",["285","286"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\firebase.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.jsx",["287","288","289","290","291"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductCreateForm = ({ handleChange, handleSubmit, values, handleCategoryChange, showSubs, subOptions, setValues }) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        subs,\r\n        quantity,\r\n        images,\r\n        shipping,\r\n        colors,\r\n        color,\r\n        brands,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input className=\"form-control\" type=\"text\" value={title} name=\"title\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input className=\"form-control\" type=\"text\" value={description} name=\"description\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input className=\"form-control\" type=\"number\" value={price} name=\"price\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select name=\"shipping\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input className=\"form-control\" type=\"number\" value={quantity} name=\"quantity\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    {colors.map(c => (\r\n                        <option key={c} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Brand</label>\r\n                <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please select</option>\r\n                    {brands.map(b => (\r\n                        <option key={b} value={b}>{b}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select name=\"category\" className=\"form-control\" onChange={handleCategoryChange}>\r\n                    <option value=\"\">Please select</option>\r\n                    {categories.length > 0 &&\r\n                        categories.map(c => (\r\n                            <option key={c._id} value={c._id}>{c.name}</option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            {showSubs && (\r\n                <div className=\"form-group\">\r\n                    <label>Sub Categories</label>\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: '100%' }}\r\n                        value={subs}\r\n                        placeholder=\"Please select\"\r\n                        onChange={value => setValues({ ...values, subs: value })}\r\n                    >\r\n                        {subOptions.length && subOptions.map(s => (\r\n                            <Option key={s._id} value={s._id}>{s.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )}\r\n\r\n            <button type=\"submit\" className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductCreateForm\r\n",["292","293"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\LoadingCard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reportWebVitals.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductListItems.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\Star.jsx",[],["294","295"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.jsx",["296"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct } from '../../../functions/product'\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductCreate = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [values, setValues] = useState(initialState)\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [showSubs, setShowSubs] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(categories => setValues({ ...values, categories: categories.data }))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const response = await createProduct(user.token, values)\r\n            window.alert(`\"${response.data.title}\" successfully created`)\r\n            window.location.reload()\r\n            setLoading(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error(err.response.data.err)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.value) {\r\n            setValues({ ...values, subs: [], category: e.target.value })\r\n            getCategorySubs(e.target.value)\r\n                .then(res => {\r\n                    setSubOptions(res.data)\r\n                    setShowSubs(true)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product create</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductCreateForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        showSubs={showSubs}\r\n                        subOptions={subOptions}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCreate","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\CategoryForm.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\category\\CategoryList.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\Register.jsx",["297"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`)\r\n        localStorage.setItem('emailForRegistration', email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n        >\r\n            Register\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.jsx",["298"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        user && user.token && history.push('/')\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n\r\n        await auth\r\n            .sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success(`Link for password reset is sent to your email ${email}`)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const forgotPasswordForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            value={email}\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Your email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-raised\"\r\n            disabled={!email}\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Forgot password</h4>\r\n                    }\r\n                    {forgotPasswordForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\History.jsx",[],["299","300"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Wishlist.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\user\\Password.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Product.jsx",["301","302"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getProduct, productRelated, productStar } from '../../functions/product'\r\nimport SingleProduct from '../../components/cards/SingleProduct'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst Product = ({ match }) => {\r\n    const [product, setProduct] = useState('')\r\n    const [star, setStar] = useState(0)\r\n    const [related, setRelated] = useState([])\r\n\r\n    console.log(related);\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n    const { slug } = match.params\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n    }, [slug])\r\n\r\n    useEffect(() => {\r\n        if (user && user.token && product.ratings) {\r\n            let existingRatingObject = product && product.ratings.find(elem => elem.postedBy.toString() === user._id.toString())\r\n            existingRatingObject && setStar(existingRatingObject.star) // current user's star\r\n        }\r\n    })\r\n\r\n    const loadProduct = () => {\r\n        getProduct(match.params.slug)\r\n            .then(res => {\r\n                setProduct(res.data)\r\n                productRelated(res.data._id)\r\n                    .then(res => setRelated(res.data))\r\n            })\r\n    }\r\n\r\n    const onStarClick = (newRating, name) => {\r\n        setStar(newRating)\r\n        if (user && user.token) {\r\n            productStar(name, newRating, user.token)\r\n                .then(res => {\r\n                    loadProduct()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row pt-4\">\r\n                <SingleProduct\r\n                    product={product}\r\n                    star={star}\r\n                    onStarClick={onStarClick}\r\n                />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center py-5\">\r\n                    <hr />\r\n                    <h4>Related products</h4>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {related.length ? related.map(product => (\r\n                            <div\r\n                                className=\"col-md-4\"\r\n                                key={product._id}\r\n                            >\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        )) : (\r\n                            <div className=\"text-center col\">No Products Found</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.jsx",["303"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategory()\r\n    }, [])\r\n\r\n    const loadCategory = async () => {\r\n        getCategory(match.params.slug).then(res => setCategoryName(res.data.name))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await updateCategory(user.token, categoryName, match.params.slug)\r\n            toast.success(`${response.data.name} is updated`)\r\n            setLoading(false)\r\n            history.push('/admin/category')\r\n        } catch (err) {\r\n            toast.error(err.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Update category</h4>\r\n                    }\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        categoryName={categoryName}\r\n                        setCategoryName={setCategoryName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.jsx",["304"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\sub\\SubHome.jsx",["305"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\category\\CategoryHome.jsx",["306"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\home\\Home.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.jsx",["307","308"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { createProduct, getProduct, updateProduct } from '../../../functions/product'\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    quantity: '',\r\n    images: [],\r\n    shipping: '',\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    color: '',\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    brand: ''\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n    const [values, setValues] = useState(initialState)\r\n    const [categories, setCategories] = useState([])\r\n    const [subsIds, setSubsIds] = useState([])\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadProduct = () => {\r\n        getProduct(match.params.slug)\r\n            .then(resp => {\r\n                // 1. load single product\r\n                setValues({ ...values, ...resp.data })\r\n                // 2. load single product category subs\r\n                getCategorySubs(resp.data.category._id)\r\n                    .then(res => setSubOptions(res.data))\r\n                // 3. prepare array of sub ids to show as default sub\r\n                const arr = []\r\n                resp.data.subs.map(sub => arr.push(sub._id))\r\n                setSubsIds((prev) => arr)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loadCategories = () => {\r\n        getCategories()\r\n            .then(categories => setCategories(categories.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        values.subs = subsIds\r\n        values.category = selectedCategory ? selectedCategory : values.category\r\n\r\n        updateProduct(match.params.slug, values, user.token)\r\n            .then(response => {\r\n                debugger\r\n                setLoading(false)\r\n                toast.success(`\"${response.data.title}\" is updated`)\r\n                history.push('/admin/products')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(err.response.data.err)\r\n            })\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        setSelectedCategory(e.target.value)\r\n        getCategorySubs(e.target.value)\r\n            .then(resp => setSubOptions(resp.data))\r\n\r\n        // clear subcategories array of ids\r\n        setSubsIds([])\r\n        // if user clicks back to the original category\r\n        // show its sub categories in default\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading\r\n                        ? <LoadingOutlined className=\"text-danger h1 d-block mx-auto my-2\" />\r\n                        : <h4>Product update</h4>\r\n                    }\r\n                    <hr />\r\n\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <ProductUpdateForm\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        categories={categories}\r\n                        subsIds={subsIds}\r\n                        setSubsIds={setSubsIds}\r\n                        subOptions={subOptions}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\searchReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\category.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\sub\\SubList.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\index.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\cartReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\SingleProduct.jsx",["309","310"],"import React, { useState } from 'react'\r\nimport { Card, Tabs, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HeartOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport StarRatings from 'react-star-ratings';\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport imgPlaceholder from '../../images/placeholder.png'\r\nimport ProductListItems from './ProductListItems'\r\nimport RatingModal from '../modal/RatingModal'\r\nimport showAverage from '../../functions/rating'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n    const { title, images, description, _id } = product\r\n\r\n    const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== undefined) {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            // set only unique objects\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n            localStorage.setItem('cart', JSON.stringify(unique))\r\n\r\n            // show tooltip\r\n            setTooltip('Added to cart')\r\n\r\n            // save to redux store\r\n            dispatch({\r\n                type: 'ADD_TO_CART',\r\n                payload: unique\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-7\">\r\n                {images && images.length ? (\r\n                    <Carousel\r\n                        showArrows={true}\r\n                        autoPlay\r\n                        infiniteLoop\r\n                    >\r\n                        {images && images.map(i => (\r\n                            <div key={i.public_id}>\r\n                                <img src={i.url} alt=\"product\" />\r\n                            </div>\r\n                        ))}\r\n                    </Carousel>\r\n                ) : (\r\n                    <img src={imgPlaceholder} className=\"card-image mb-3\" />\r\n                )}\r\n                <Tabs type=\"card\">\r\n                    <TabPane tab=\"Description\" key=\"1\">{description && description}</TabPane>\r\n                    <TabPane tab=\"More\" key=\"2\">Call us on XXXXXX to get info about this product</TabPane>\r\n                </Tabs>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <h1 className=\"bg-info p-3\">{title}</h1>\r\n                <div className=\"mb-3 text-center\">\r\n                    {product && product.ratings && product.ratings.length ? showAverage(product) : 'No ratings yet'}\r\n                </div>\r\n                <Card\r\n                    actions={[\r\n                        <Tooltip title={tooltip}>\r\n                            <a onClick={handleAddToCart}>\r\n                                <ShoppingCartOutlined\r\n                                    className=\"text-danger\"\r\n                                />\r\n                                <br /> Add to Cart\r\n                                </a>\r\n                        </Tooltip>,\r\n                        <Link to=\"/\">\r\n                            <HeartOutlined className=\"text-info\" /> Add to Wishlist\r\n                        </Link>,\r\n                        <RatingModal>\r\n                            <StarRatings\r\n                                rating={star}\r\n                                starRatedColor=\"red\"\r\n                                changeRating={onStarClick}\r\n                                numberOfStars={5}\r\n                                name={_id}\r\n                                isSelectable={true}\r\n                            />\r\n                        </RatingModal>\r\n                    ]}\r\n                >\r\n                    <ProductListItems product={product} />\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleProduct\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\App.js",["311"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\cart\\Cart.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\UserNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\functions\\rating.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\Jumbotron.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.jsx",["312","313"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\forms\\FileUpload.jsx",["314"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.jsx",["315","316"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\nav\\AdminNav.jsx",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["317"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(5)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount(currentCount => --currentCount)\r\n        }, 1000)\r\n\r\n        // redirect once count is equal to 0\r\n        count === 0 && history.push('/')\r\n\r\n        return () => clearInterval(interval)\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"container p-5 text-center\">\r\n            <p>Redirecting you in {count} seconds</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\reducers\\drawerReducer.js",[],"D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\drawer\\SideDrawer.jsx",["318"],"import React from 'react'\r\nimport { Drawer } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport placeholder from '../../images/placeholder.png'\r\n\r\nconst SideDrawer = () => {\r\n    const { drawer, cart } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = () => {\r\n        dispatch({\r\n            type: 'SET_DRAWER',\r\n            payload: false\r\n        })\r\n    }\r\n\r\n    const imageStyle = {\r\n        width: '100%',\r\n        height: '100px',\r\n        objectFit: 'cover'\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={`Cart / ${cart.length} Product`}\r\n            visible={drawer}\r\n            onClose={handleClose}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {cart.map(p => (\r\n                        <React.Fragment key={p._id}>\r\n                            <img\r\n                                src={p.images[0]\r\n                                    ? p.images[0].url\r\n                                    : placeholder\r\n                                }\r\n                                style={imageStyle}\r\n                            />\r\n                            <p className=\"text-center bg-secondary text-light\">{p.title} x {p.count}</p>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <Link to=\"/cart\">\r\n                <button\r\n                    className=\"text-center btn btn-primary btn-raised btn-block\"\r\n                    onClick={() =>\r\n                        dispatch({\r\n                            type: 'SET_DRAWER',\r\n                            payload: false\r\n                        })\r\n                    }\r\n                >\r\n                    Go To Cart\r\n                </button>\r\n            </Link>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer\r\n","D:\\study_projects\\udemy-ecommerce\\client\\src\\components\\cards\\AdminProductCard.jsx",["319"],"D:\\study_projects\\udemy-ecommerce\\client\\src\\pages\\checkout\\Checkout.jsx",["320"],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"321","replacedBy":"325"},{"ruleId":"323","replacedBy":"326"},{"ruleId":"321","replacedBy":"327"},{"ruleId":"323","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":13,"column":9,"nodeType":"331","messageId":"332","endLine":13,"endColumn":13},{"ruleId":"329","severity":1,"message":"333","line":25,"column":20,"nodeType":"331","messageId":"332","endLine":25,"endColumn":29},{"ruleId":"329","severity":1,"message":"334","line":27,"column":20,"nodeType":"331","messageId":"332","endLine":27,"endColumn":29},{"ruleId":"335","severity":1,"message":"336","line":88,"column":8,"nodeType":"337","endLine":88,"endColumn":12,"suggestions":"338"},{"ruleId":"321","replacedBy":"339"},{"ruleId":"323","replacedBy":"340"},{"ruleId":"335","severity":1,"message":"341","line":16,"column":8,"nodeType":"337","endLine":16,"endColumn":14,"suggestions":"342"},{"ruleId":"335","severity":1,"message":"341","line":16,"column":8,"nodeType":"337","endLine":16,"endColumn":14,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":77,"column":24,"nodeType":"346","endLine":77,"endColumn":84},{"ruleId":"347","severity":1,"message":"348","line":85,"column":25,"nodeType":"346","endLine":85,"endColumn":54},{"ruleId":"321","replacedBy":"349"},{"ruleId":"323","replacedBy":"350"},{"ruleId":"335","severity":1,"message":"351","line":27,"column":8,"nodeType":"337","endLine":27,"endColumn":14,"suggestions":"352"},{"ruleId":"321","replacedBy":"353"},{"ruleId":"323","replacedBy":"354"},{"ruleId":"329","severity":1,"message":"355","line":12,"column":9,"nodeType":"331","messageId":"332","endLine":12,"endColumn":17},{"ruleId":"329","severity":1,"message":"356","line":15,"column":9,"nodeType":"331","messageId":"332","endLine":15,"endColumn":15},{"ruleId":"329","severity":1,"message":"357","line":16,"column":9,"nodeType":"331","messageId":"332","endLine":16,"endColumn":17},{"ruleId":"329","severity":1,"message":"358","line":18,"column":9,"nodeType":"331","messageId":"332","endLine":18,"endColumn":14},{"ruleId":"329","severity":1,"message":"359","line":20,"column":9,"nodeType":"331","messageId":"332","endLine":20,"endColumn":14},{"ruleId":"321","replacedBy":"360"},{"ruleId":"323","replacedBy":"361"},{"ruleId":"321","replacedBy":"362"},{"ruleId":"323","replacedBy":"363"},{"ruleId":"335","severity":1,"message":"364","line":38,"column":8,"nodeType":"337","endLine":38,"endColumn":10,"suggestions":"365"},{"ruleId":"335","severity":1,"message":"351","line":13,"column":8,"nodeType":"337","endLine":13,"endColumn":14,"suggestions":"366"},{"ruleId":"335","severity":1,"message":"351","line":15,"column":8,"nodeType":"337","endLine":15,"endColumn":14,"suggestions":"367"},{"ruleId":"321","replacedBy":"368"},{"ruleId":"323","replacedBy":"369"},{"ruleId":"335","severity":1,"message":"370","line":20,"column":8,"nodeType":"337","endLine":20,"endColumn":14,"suggestions":"371"},{"ruleId":"335","severity":1,"message":"372","line":22,"column":5,"nodeType":"331","endLine":22,"endColumn":14,"suggestions":"373"},{"ruleId":"335","severity":1,"message":"374","line":17,"column":8,"nodeType":"337","endLine":17,"endColumn":10,"suggestions":"375"},{"ruleId":"335","severity":1,"message":"376","line":21,"column":8,"nodeType":"337","endLine":21,"endColumn":10,"suggestions":"377"},{"ruleId":"335","severity":1,"message":"378","line":23,"column":8,"nodeType":"337","endLine":23,"endColumn":10,"suggestions":"379"},{"ruleId":"335","severity":1,"message":"378","line":23,"column":8,"nodeType":"337","endLine":23,"endColumn":10,"suggestions":"380"},{"ruleId":"329","severity":1,"message":"381","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":23},{"ruleId":"335","severity":1,"message":"370","line":41,"column":8,"nodeType":"337","endLine":41,"endColumn":10,"suggestions":"382"},{"ruleId":"344","severity":1,"message":"345","line":70,"column":21,"nodeType":"346","endLine":70,"endColumn":77},{"ruleId":"347","severity":1,"message":"348","line":85,"column":29,"nodeType":"346","endLine":85,"endColumn":58},{"ruleId":"335","severity":1,"message":"383","line":65,"column":6,"nodeType":"337","endLine":65,"endColumn":8,"suggestions":"384"},{"ruleId":"329","severity":1,"message":"385","line":23,"column":9,"nodeType":"331","messageId":"332","endLine":23,"endColumn":13},{"ruleId":"329","severity":1,"message":"356","line":25,"column":9,"nodeType":"331","messageId":"332","endLine":25,"endColumn":15},{"ruleId":"329","severity":1,"message":"386","line":3,"column":8,"nodeType":"331","messageId":"332","endLine":3,"endColumn":13},{"ruleId":"387","severity":1,"message":"388","line":22,"column":27,"nodeType":"389","messageId":"390","endLine":22,"endColumn":29},{"ruleId":"387","severity":1,"message":"388","line":48,"column":27,"nodeType":"389","messageId":"390","endLine":48,"endColumn":29},{"ruleId":"335","severity":1,"message":"351","line":17,"column":8,"nodeType":"337","endLine":17,"endColumn":15,"suggestions":"391"},{"ruleId":"344","severity":1,"message":"345","line":35,"column":29,"nodeType":"346","endLine":41,"endColumn":31},{"ruleId":"344","severity":1,"message":"345","line":33,"column":24,"nodeType":"346","endLine":33,"endColumn":84},{"ruleId":"335","severity":1,"message":"392","line":22,"column":8,"nodeType":"337","endLine":22,"endColumn":10,"suggestions":"393"},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],["394"],["395"],["394"],["395"],"no-unused-vars","'Item' is assigned a value but never used.","Identifier","unusedVar","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.","ArrayExpression",["396"],["394"],["395"],"React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["397"],["398"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["394"],["395"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["399"],["394"],["395"],"'category' is assigned a value but never used.","'images' is assigned a value but never used.","'shipping' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.",["394"],["395"],["394"],["395"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["400"],["401"],["402"],["394"],["395"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["403"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user, product] as a second argument to the useEffect Hook.",["404"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["405"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["406"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["407"],["408"],"'createProduct' is defined but never used.",["409"],"React Hook useEffect has missing dependencies: 'dispatch' and 'updateCart'. Either include them or remove the dependency array.",["410"],"'subs' is assigned a value but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["411"],"React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["412"],"no-global-assign","no-unsafe-negation",{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"415","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"418","fix":"422"},{"desc":"418","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"432","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [ok, price]",{"range":"443","text":"444"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"445","text":"446"},{"range":"447","text":"446"},"Update the dependencies array to be: [history, user]",{"range":"448","text":"449"},"Update the dependencies array to be: [loadCategories]",{"range":"450","text":"451"},{"range":"452","text":"449"},{"range":"453","text":"449"},"Update the dependencies array to be: [loadProduct, slug]",{"range":"454","text":"455"},"Add dependencies array: [user, product]",{"range":"456","text":"457"},"Update the dependencies array to be: [loadCategory]",{"range":"458","text":"459"},"Update the dependencies array to be: [loadSub]",{"range":"460","text":"461"},"Update the dependencies array to be: [slug]",{"range":"462","text":"463"},{"range":"464","text":"463"},"Update the dependencies array to be: [loadProduct]",{"range":"465","text":"466"},"Update the dependencies array to be: [dispatch, updateCart]",{"range":"467","text":"468"},"Update the dependencies array to be: [count, history]",{"range":"469","text":"470"},"Update the dependencies array to be: [user.token]",{"range":"471","text":"472"},[2854,2858],"[ok, price]",[583,589],"[loadAllProducts, page]",[583,589],[925,931],"[history, user]",[1241,1243],"[loadCategories]",[394,400],[453,459],[661,667],"[loadProduct, slug]",[990,990],", [user, product]",[614,616],"[loadCategory]",[766,768],"[loadSub]",[673,675],"[slug]",[723,725],[1424,1426],"[loadProduct]",[2424,2426],"[dispatch, updateCart]",[501,508],"[count, history]",[674,676],"[user.token]"]